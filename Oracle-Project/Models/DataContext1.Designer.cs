//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 8/23/2017 2:54:53 PM
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace ADMINContext
{

    [DatabaseAttribute(Name = "ADMIN")]
    [ProviderAttribute(typeof(Devart.Data.Oracle.Linq.Provider.OracleDataProvider))]
    public partial class ADMINDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(ADMINDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertCHITIETDDH(CHITIETDDH instance);
        partial void UpdateCHITIETDDH(CHITIETDDH instance);
        partial void DeleteCHITIETDDH(CHITIETDDH instance);
        partial void InsertDONDATHANG(DONDATHANG instance);
        partial void UpdateDONDATHANG(DONDATHANG instance);
        partial void DeleteDONDATHANG(DONDATHANG instance);
        partial void InsertHOADON(HOADON instance);
        partial void UpdateHOADON(HOADON instance);
        partial void DeleteHOADON(HOADON instance);
        partial void InsertKHACHHANG(KHACHHANG instance);
        partial void UpdateKHACHHANG(KHACHHANG instance);
        partial void DeleteKHACHHANG(KHACHHANG instance);
        partial void InsertLOAISP(LOAISP instance);
        partial void UpdateLOAISP(LOAISP instance);
        partial void DeleteLOAISP(LOAISP instance);
        partial void InsertNHANVIEN(NHANVIEN instance);
        partial void UpdateNHANVIEN(NHANVIEN instance);
        partial void DeleteNHANVIEN(NHANVIEN instance);
        partial void InsertQUYEN(QUYEN instance);
        partial void UpdateQUYEN(QUYEN instance);
        partial void DeleteQUYEN(QUYEN instance);
        partial void InsertSANPHAM(SANPHAM instance);
        partial void UpdateSANPHAM(SANPHAM instance);
        partial void DeleteSANPHAM(SANPHAM instance);
        partial void InsertTAG(TAG instance);
        partial void UpdateTAG(TAG instance);
        partial void DeleteTAG(TAG instance);
        partial void InsertTHONGTINWEBSITE(THONGTINWEBSITE instance);
        partial void UpdateTHONGTINWEBSITE(THONGTINWEBSITE instance);
        partial void DeleteTHONGTINWEBSITE(THONGTINWEBSITE instance);
        partial void InsertTRANGTHAIDDH(TRANGTHAIDDH instance);
        partial void UpdateTRANGTHAIDDH(TRANGTHAIDDH instance);
        partial void DeleteTRANGTHAIDDH(TRANGTHAIDDH instance);
        partial void InsertTRANGTHAIHD(TRANGTHAIHD instance);
        partial void UpdateTRANGTHAIHD(TRANGTHAIHD instance);
        partial void DeleteTRANGTHAIHD(TRANGTHAIHD instance);

        #endregion

        public ADMINDataContext() :
        base(GetConnectionString("ADMINDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public ADMINDataContext(MappingSource mappingSource) :
        base(GetConnectionString("ADMINDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public ADMINDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public ADMINDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public ADMINDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public ADMINDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<CHITIETDDH> CHITIETDDHs
        {
            get
            {
                return this.GetTable<CHITIETDDH>();
            }
        }

        public Devart.Data.Linq.Table<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this.GetTable<DONDATHANG>();
            }
        }

        public Devart.Data.Linq.Table<HOADON> HOADONs
        {
            get
            {
                return this.GetTable<HOADON>();
            }
        }

        public Devart.Data.Linq.Table<KHACHHANG> KHACHHANGs
        {
            get
            {
                return this.GetTable<KHACHHANG>();
            }
        }

        public Devart.Data.Linq.Table<LOAISP> LOAISPs
        {
            get
            {
                return this.GetTable<LOAISP>();
            }
        }

        public Devart.Data.Linq.Table<NHANVIEN> NHANVIENs
        {
            get
            {
                return this.GetTable<NHANVIEN>();
            }
        }

        public Devart.Data.Linq.Table<QUYEN> QUYENs
        {
            get
            {
                return this.GetTable<QUYEN>();
            }
        }

        public Devart.Data.Linq.Table<SANPHAM> SANPHAMs
        {
            get
            {
                return this.GetTable<SANPHAM>();
            }
        }

        public Devart.Data.Linq.Table<TAG> TAGs
        {
            get
            {
                return this.GetTable<TAG>();
            }
        }

        public Devart.Data.Linq.Table<THONGTINWEBSITE> THONGTINWEBSITEs
        {
            get
            {
                return this.GetTable<THONGTINWEBSITE>();
            }
        }

        public Devart.Data.Linq.Table<TRANGTHAIDDH> TRANGTHAIDDHs
        {
            get
            {
                return this.GetTable<TRANGTHAIDDH>();
            }
        }

        public Devart.Data.Linq.Table<TRANGTHAIHD> TRANGTHAIHDs
        {
            get
            {
                return this.GetTable<TRANGTHAIHD>();
            }
        }

    
        /// <summary>
        /// There are no comments for PROCDSSPKHONGBAN in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DSSP_KHONGBAN")]
        public Devart.Data.Linq.ISingleResult<SANPHAM> PROCDSSPKHONGBAN([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSSPKHONGBANResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<SANPHAM>)(_PROCDSSPKHONGBANResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCKHOIPHUCSP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_KHOIPHUCSP")]
        public void PROCKHOIPHUCSP([Parameter(Name="MA", DbType="NUMBER")] System.Nullable<decimal> MA)
        {
            IExecuteResult _PROCKHOIPHUCSPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MA);
        }

    
        /// <summary>
        /// There are no comments for PROCLAYSPLOAITRUYENVAO in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_LAYSP_LOAITRUYENVAO")]
        public Devart.Data.Linq.ISingleResult<PROCLAYSPLOAITRUYENVAOResult> PROCLAYSPLOAITRUYENVAO([Parameter(Name="X", DbType="VARCHAR2(4000 CHAR)")] string X)
        {
            IExecuteResult _PROCLAYSPLOAITRUYENVAOResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<PROCLAYSPLOAITRUYENVAOResult>)(_PROCLAYSPLOAITRUYENVAOResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDS6SPBANCHAY in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DS6SP_BANCHAY")]
        public Devart.Data.Linq.ISingleResult<PROCDS6SPBANCHAYResult> PROCDS6SPBANCHAY()
        {
            IExecuteResult _PROCDS6SPBANCHAYResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PROCDS6SPBANCHAYResult>)(_PROCDS6SPBANCHAYResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSSPLOAI in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DSSP_LOAI")]
        public Devart.Data.Linq.ISingleResult<SANPHAM> PROCDSSPLOAI([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSSPLOAIResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<SANPHAM>)(_PROCDSSPLOAIResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCXOASP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_XOASP")]
        public void PROCXOASP([Parameter(Name="MA", DbType="NUMBER")] System.Nullable<decimal> MA)
        {
            IExecuteResult _PROCXOASPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MA);
        }

    
        /// <summary>
        /// There are no comments for ProcLaySPLoaiTruyenVao in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.""Proc_LaySP_LoaiTruyenVao""")]
        public Devart.Data.Linq.ISingleResult<ProcLaySPLoaiTruyenVaoResult> ProcLaySPLoaiTruyenVao([Parameter(Name="X", DbType="VARCHAR2(4000 CHAR)")] string X)
        {
            IExecuteResult _ProcLaySPLoaiTruyenVaoResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<ProcLaySPLoaiTruyenVaoResult>)(_ProcLaySPLoaiTruyenVaoResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for DS5DONHANGMOI in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.DS_5DONHANG_MOI", IsComposable=true)]
        public System.Object DS5DONHANGMOI()
        {
            IExecuteResult _DS5DONHANGMOIResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Object)(_DS5DONHANGMOIResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for NHAPLOAISP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.NHAP_LOAISP", IsComposable=true)]
        public System.Nullable<System.Decimal> NHAPLOAISP([Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME)
        {
            IExecuteResult _NHAPLOAISPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NAME);
            return ((System.Nullable<System.Decimal>)(_NHAPLOAISPResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FNCONVERTTOVN in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.FN_CONVERT_TO_VN", IsComposable=true)]
        public System.String FNCONVERTTOVN([Parameter(Name="STRINPUT", DbType="NVARCHAR2(2000)")] string STRINPUT)
        {
            IExecuteResult _FNCONVERTTOVNResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), STRINPUT);
            return ((System.String)(_FNCONVERTTOVNResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SPTHEOURL in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.SP_THEO_URL", IsComposable=true)]
        public System.Object SPTHEOURL([Parameter(Name="URLPUT", DbType="VARCHAR2(4000 CHAR)")] string URLPUT)
        {
            IExecuteResult _SPTHEOURLResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), URLPUT);
            return ((System.Object)(_SPTHEOURLResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETYEAR in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_YEAR", IsComposable=true)]
        public System.Nullable<System.Decimal> GETYEAR([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETYEARResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETYEARResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETMONTH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_MONTH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETMONTH([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETMONTHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETMONTHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETDAY in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_DAY", IsComposable=true)]
        public System.Nullable<System.Decimal> GETDAY([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETDAYResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETDAYResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETSLDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_SL_DH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETSLDH()
        {
            IExecuteResult _GETSLDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETSLDHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SUALOAISP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.SUA_LOAISP", IsComposable=true)]
        public System.Nullable<System.Decimal> SUALOAISP([Parameter(Name="IDSP", DbType="NUMBER")] System.Nullable<decimal> IDSP, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME)
        {
            IExecuteResult _SUALOAISPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDSP, NAME);
            return ((System.Nullable<System.Decimal>)(_SUALOAISPResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETTTGDDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_TTG_DDH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETTTGDDH()
        {
            IExecuteResult _GETTTGDDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETTTGDDHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETSLSP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_SL_SP", IsComposable=true)]
        public System.Nullable<System.Decimal> GETSLSP()
        {
            IExecuteResult _GETSLSPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETSLSPResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETAGE in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_AGE", IsComposable=true)]
        public System.Nullable<System.Decimal> GETAGE([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETAGEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETAGEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETKHORDER in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_KH_ORDER", IsComposable=true)]
        public System.Nullable<System.Decimal> GETKHORDER()
        {
            IExecuteResult _GETKHORDERResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETKHORDERResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETPRICE in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_PRICE", IsComposable=true)]
        public System.Nullable<System.Decimal> GETPRICE([Parameter(Name="ID", DbType="NUMBER")] System.Nullable<decimal> ID)
        {
            IExecuteResult _GETPRICEResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ID);
            return ((System.Nullable<System.Decimal>)(_GETPRICEResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SUASANPHAM in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.SUA_SANPHAM", IsComposable=true)]
        public System.Nullable<System.Decimal> SUASANPHAM([Parameter(Name="MASP", DbType="NUMBER")] System.Nullable<decimal> MASP, [Parameter(Name="MALOAI", DbType="NUMBER")] System.Nullable<decimal> MALOAI, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME, [Parameter(Name="GIABAN", DbType="NUMBER")] System.Nullable<decimal> GIABAN, [Parameter(Name="GIAKM", DbType="NUMBER")] System.Nullable<decimal> GIAKM, [Parameter(Name="MOTA", DbType="NCLOB")] string MOTA, [Parameter(Name="ANH", DbType="VARCHAR2(4000 CHAR)")] string ANH, [Parameter(Name="THKM", DbType="VARCHAR2(1 CHAR)")] string THKM, [Parameter(Name="THHOT", DbType="VARCHAR2(1 CHAR)")] string THHOT, [Parameter(Name="THTUAN", DbType="VARCHAR2(1 CHAR)")] string THTUAN, [Parameter(Name="THBAN", DbType="VARCHAR2(1 CHAR)")] string THBAN)
        {
            IExecuteResult _SUASANPHAMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MASP, MALOAI, NAME, GIABAN, GIAKM, MOTA, ANH, THKM, THHOT, THTUAN, THBAN);
            return ((System.Nullable<System.Decimal>)(_SUASANPHAMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for NHAPSANPHAM in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.NHAP_SANPHAM", IsComposable=true)]
        public System.Nullable<System.Decimal> NHAPSANPHAM([Parameter(Name="MALOAI", DbType="NUMBER")] System.Nullable<decimal> MALOAI, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME, [Parameter(Name="GIABAN", DbType="NUMBER")] System.Nullable<decimal> GIABAN, [Parameter(Name="GIAKM", DbType="NUMBER")] System.Nullable<decimal> GIAKM, [Parameter(Name="MOTA", DbType="NCLOB")] string MOTA, [Parameter(Name="ANH", DbType="VARCHAR2(4000 CHAR)")] string ANH, [Parameter(Name="THKM", DbType="VARCHAR2(1 CHAR)")] string THKM, [Parameter(Name="THHOT", DbType="VARCHAR2(1 CHAR)")] string THHOT, [Parameter(Name="THTUAN", DbType="VARCHAR2(1 CHAR)")] string THTUAN, [Parameter(Name="THBAN", DbType="VARCHAR2(1 CHAR)")] string THBAN)
        {
            IExecuteResult _NHAPSANPHAMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MALOAI, NAME, GIABAN, GIAKM, MOTA, ANH, THKM, THHOT, THTUAN, THBAN);
            return ((System.Nullable<System.Decimal>)(_NHAPSANPHAMResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCCHITIETDDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_CHITIET_DDH")]
        public Devart.Data.Linq.ISingleResult<DONDATHANG> PROCCHITIETDDH([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCCHITIETDDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<DONDATHANG>)(_PROCCHITIETDDHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSITEMDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DS_ITEM_DH")]
        public Devart.Data.Linq.ISingleResult<CHITIETDDH> PROCDSITEMDH([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSITEMDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<CHITIETDDH>)(_PROCDSITEMDHResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCSETDDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_SETDDH")]
        public void PROCSETDDH([Parameter(Name="MATT", DbType="NUMBER")] System.Nullable<decimal> MATT, [Parameter(Name="MADH", DbType="NUMBER")] System.Nullable<decimal> MADH)
        {
            IExecuteResult _PROCSETDDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MATT, MADH);
        }

    
        /// <summary>
        /// There are no comments for PROCDANGNHAPNV in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DANGNHAP_NV")]
        public Devart.Data.Linq.ISingleResult<NHANVIEN> PROCDANGNHAPNV([Parameter(Name="TENDN", DbType="NVARCHAR2(2000)")] string TENDN, [Parameter(Name="PASS", DbType="NVARCHAR2(2000)")] string PASS)
        {
            IExecuteResult _PROCDANGNHAPNVResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), TENDN, PASS);
            return ((Devart.Data.Linq.ISingleResult<NHANVIEN>)(_PROCDANGNHAPNVResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for XUATHOADON in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.XUAT_HOADON", IsComposable=true)]
        public System.Nullable<System.Decimal> XUATHOADON([Parameter(Name="MADDH", DbType="NUMBER")] System.Nullable<decimal> MADDH, [Parameter(Name="MANV", DbType="NUMBER")] System.Nullable<decimal> MANV, [Parameter(Name="NGAYGIAO", DbType="DATE")] System.Nullable<System.DateTime> NGAYGIAO, [Parameter(Name="GHICHU", DbType="NVARCHAR2(2000)")] string GHICHU, [Parameter(Name="MSOTHUE", DbType="VARCHAR2(4000 CHAR)")] string MSOTHUE, [Parameter(Name="TENCT", DbType="NVARCHAR2(2000)")] string TENCT, [Parameter(Name="DIACHI", DbType="NVARCHAR2(2000)")] string DIACHI)
        {
            IExecuteResult _XUATHOADONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MADDH, MANV, NGAYGIAO, GHICHU, MSOTHUE, TENCT, DIACHI);
            return ((System.Nullable<System.Decimal>)(_XUATHOADONResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSHOADON in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DS_HOADON")]
        public Devart.Data.Linq.ISingleResult<HOADON> PROCDSHOADON([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSHOADONResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<HOADON>)(_PROCDSHOADONResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSHOADONNHANVIEN in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_DS_HOADON_NHANVIEN")]
        public Devart.Data.Linq.ISingleResult<HOADON> PROCDSHOADONNHANVIEN([Parameter(Name="Y", DbType="NUMBER")] System.Nullable<decimal> Y)
        {
            IExecuteResult _PROCDSHOADONNHANVIENResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Y);
            return ((Devart.Data.Linq.ISingleResult<HOADON>)(_PROCDSHOADONNHANVIENResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCTHONGKELOAI in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_THONGKE_LOAI")]
        public Devart.Data.Linq.ISingleResult<PROCTHONGKELOAIResult> PROCTHONGKELOAI()
        {
            IExecuteResult _PROCTHONGKELOAIResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PROCTHONGKELOAIResult>)(_PROCTHONGKELOAIResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETSLHANGBAN in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.GET_SLHANGBAN", IsComposable=true)]
        public System.Nullable<System.Decimal> GETSLHANGBAN()
        {
            IExecuteResult _GETSLHANGBANResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETSLHANGBANResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCTKHDNV in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_TK_HD_NV")]
        public Devart.Data.Linq.ISingleResult<PROCTKHDNVResult> PROCTKHDNV()
        {
            IExecuteResult _PROCTKHDNVResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PROCTKHDNVResult>)(_PROCTKHDNVResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEPROCSANPHAM in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM")]
        public void PACKAGEPROCSANPHAM()
        {
            IExecuteResult _PACKAGEPROCSANPHAMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEPROCNV in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_NV")]
        public void PACKAGEPROCNV()
        {
            IExecuteResult _PACKAGEPROCNVResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PROCTIMSP in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_TIM_SP")]
        public Devart.Data.Linq.ISingleResult<SANPHAM> PROCTIMSP([Parameter(Name="X", DbType="NVARCHAR2(2000)")] string X)
        {
            IExecuteResult _PROCTIMSPResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<SANPHAM>)(_PROCTIMSPResult.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEPROCHDDDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_HD_DDH")]
        public void PACKAGEPROCHDDDH()
        {
            IExecuteResult _PACKAGEPROCHDDDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEFCCHUNG in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG")]
        public void PACKAGEFCCHUNG()
        {
            IExecuteResult _PACKAGEFCCHUNGResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEFCSANPHAM in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM")]
        public void PACKAGEFCSANPHAM()
        {
            IExecuteResult _PACKAGEFCSANPHAMResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PACKAGEFCDDHHD in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_DDH_HD")]
        public void PACKAGEFCDDHHD()
        {
            IExecuteResult _PACKAGEFCDDHHDResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
        }

    
        /// <summary>
        /// There are no comments for PROCDSSPKHONGBAN1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_DSSP_KHONGBAN")]
        public Devart.Data.Linq.ISingleResult<SANPHAM> PROCDSSPKHONGBAN1([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSSPKHONGBAN1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<SANPHAM>)(_PROCDSSPKHONGBAN1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSSPLOAI1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_DSSP_LOAI")]
        public Devart.Data.Linq.ISingleResult<SANPHAM> PROCDSSPLOAI1([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSSPLOAI1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<SANPHAM>)(_PROCDSSPLOAI1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCKHOIPHUCSP1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_KHOIPHUCSP")]
        public void PROCKHOIPHUCSP1([Parameter(Name="MA", DbType="NUMBER")] System.Nullable<decimal> MA)
        {
            IExecuteResult _PROCKHOIPHUCSP1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MA);
        }

    
        /// <summary>
        /// There are no comments for PROCDS6SPBANCHAY1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_DS6SP_BANCHAY")]
        public Devart.Data.Linq.ISingleResult<PROCDS6SPBANCHAYResult> PROCDS6SPBANCHAY1()
        {
            IExecuteResult _PROCDS6SPBANCHAY1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((Devart.Data.Linq.ISingleResult<PROCDS6SPBANCHAYResult>)(_PROCDS6SPBANCHAY1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCLAYSPLOAITRUYENVAO1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_LAYSP_LOAITRUYENVAO")]
        public Devart.Data.Linq.ISingleResult<PROCLAYSPLOAITRUYENVAOResult> PROCLAYSPLOAITRUYENVAO1([Parameter(Name="X", DbType="VARCHAR2(4000 CHAR)")] string X)
        {
            IExecuteResult _PROCLAYSPLOAITRUYENVAO1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<PROCLAYSPLOAITRUYENVAOResult>)(_PROCLAYSPLOAITRUYENVAO1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCXOASP1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_SANPHAM.PROC_XOASP")]
        public void PROCXOASP1([Parameter(Name="MA", DbType="NUMBER")] System.Nullable<decimal> MA)
        {
            IExecuteResult _PROCXOASP1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MA);
        }

    
        /// <summary>
        /// There are no comments for PROCDANGNHAPNV1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_NV.PROC_DANGNHAP_NV")]
        public Devart.Data.Linq.ISingleResult<NHANVIEN> PROCDANGNHAPNV1([Parameter(Name="TENDN", DbType="NVARCHAR2(2000)")] string TENDN, [Parameter(Name="PASS", DbType="NVARCHAR2(2000)")] string PASS)
        {
            IExecuteResult _PROCDANGNHAPNV1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), TENDN, PASS);
            return ((Devart.Data.Linq.ISingleResult<NHANVIEN>)(_PROCDANGNHAPNV1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSHOADONNHANVIEN1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_NV.PROC_DS_HOADON_NHANVIEN")]
        public Devart.Data.Linq.ISingleResult<HOADON> PROCDSHOADONNHANVIEN1([Parameter(Name="Y", DbType="NUMBER")] System.Nullable<decimal> Y)
        {
            IExecuteResult _PROCDSHOADONNHANVIEN1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), Y);
            return ((Devart.Data.Linq.ISingleResult<HOADON>)(_PROCDSHOADONNHANVIEN1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCSETDDH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_HD_DDH.PROC_SETDDH")]
        public void PROCSETDDH1([Parameter(Name="MATT", DbType="NUMBER")] System.Nullable<decimal> MATT, [Parameter(Name="MADH", DbType="NUMBER")] System.Nullable<decimal> MADH)
        {
            IExecuteResult _PROCSETDDH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MATT, MADH);
        }

    
        /// <summary>
        /// There are no comments for PROCDSHOADON1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_HD_DDH.PROC_DS_HOADON")]
        public Devart.Data.Linq.ISingleResult<HOADON> PROCDSHOADON1([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSHOADON1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<HOADON>)(_PROCDSHOADON1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCDSITEMDH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_HD_DDH.PROC_DS_ITEM_DH")]
        public Devart.Data.Linq.ISingleResult<CHITIETDDH> PROCDSITEMDH1([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCDSITEMDH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<CHITIETDDH>)(_PROCDSITEMDH1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCCHITIETDDH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_PROC_HD_DDH.PROC_CHITIET_DDH")]
        public Devart.Data.Linq.ISingleResult<DONDATHANG> PROCCHITIETDDH1([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCCHITIETDDH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<DONDATHANG>)(_PROCCHITIETDDH1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SPTHEOURL1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.SP_THEO_URL", IsComposable=true)]
        public System.Object SPTHEOURL1([Parameter(Name="URLPUT", DbType="VARCHAR2(4000 CHAR)")] string URLPUT)
        {
            IExecuteResult _SPTHEOURL1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), URLPUT);
            return ((System.Object)(_SPTHEOURL1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETPRICE1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.GET_PRICE", IsComposable=true)]
        public System.Nullable<System.Decimal> GETPRICE1([Parameter(Name="ID", DbType="NUMBER")] System.Nullable<decimal> ID)
        {
            IExecuteResult _GETPRICE1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), ID);
            return ((System.Nullable<System.Decimal>)(_GETPRICE1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETSLSP1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.GET_SL_SP", IsComposable=true)]
        public System.Nullable<System.Decimal> GETSLSP1()
        {
            IExecuteResult _GETSLSP1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETSLSP1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for NHAPLOAISP1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.NHAP_LOAISP", IsComposable=true)]
        public System.Nullable<System.Decimal> NHAPLOAISP1([Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME)
        {
            IExecuteResult _NHAPLOAISP1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), NAME);
            return ((System.Nullable<System.Decimal>)(_NHAPLOAISP1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for DS5DONHANGMOI1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.DS_5DONHANG_MOI", IsComposable=true)]
        public System.Object DS5DONHANGMOI1()
        {
            IExecuteResult _DS5DONHANGMOI1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Object)(_DS5DONHANGMOI1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for NHAPSANPHAM1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.NHAP_SANPHAM", IsComposable=true)]
        public System.Nullable<System.Decimal> NHAPSANPHAM1([Parameter(Name="MALOAI", DbType="NUMBER")] System.Nullable<decimal> MALOAI, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME, [Parameter(Name="GIABAN", DbType="NUMBER")] System.Nullable<decimal> GIABAN, [Parameter(Name="GIAKM", DbType="NUMBER")] System.Nullable<decimal> GIAKM, [Parameter(Name="MOTA", DbType="NCLOB")] string MOTA, [Parameter(Name="ANH", DbType="VARCHAR2(4000 CHAR)")] string ANH, [Parameter(Name="THKM", DbType="VARCHAR2(1 CHAR)")] string THKM, [Parameter(Name="THHOT", DbType="VARCHAR2(1 CHAR)")] string THHOT, [Parameter(Name="THTUAN", DbType="VARCHAR2(1 CHAR)")] string THTUAN, [Parameter(Name="THBAN", DbType="VARCHAR2(1 CHAR)")] string THBAN)
        {
            IExecuteResult _NHAPSANPHAM1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MALOAI, NAME, GIABAN, GIAKM, MOTA, ANH, THKM, THHOT, THTUAN, THBAN);
            return ((System.Nullable<System.Decimal>)(_NHAPSANPHAM1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SUALOAISP1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.SUA_LOAISP", IsComposable=true)]
        public System.Nullable<System.Decimal> SUALOAISP1([Parameter(Name="IDSP", DbType="NUMBER")] System.Nullable<decimal> IDSP, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME)
        {
            IExecuteResult _SUALOAISP1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), IDSP, NAME);
            return ((System.Nullable<System.Decimal>)(_SUALOAISP1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for SUASANPHAM1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_SANPHAM.SUA_SANPHAM", IsComposable=true)]
        public System.Nullable<System.Decimal> SUASANPHAM1([Parameter(Name="MASP", DbType="NUMBER")] System.Nullable<decimal> MASP, [Parameter(Name="MALOAI", DbType="NUMBER")] System.Nullable<decimal> MALOAI, [Parameter(Name="NAME", DbType="NVARCHAR2(2000)")] string NAME, [Parameter(Name="GIABAN", DbType="NUMBER")] System.Nullable<decimal> GIABAN, [Parameter(Name="GIAKM", DbType="NUMBER")] System.Nullable<decimal> GIAKM, [Parameter(Name="MOTA", DbType="NCLOB")] string MOTA, [Parameter(Name="ANH", DbType="VARCHAR2(4000 CHAR)")] string ANH, [Parameter(Name="THKM", DbType="VARCHAR2(1 CHAR)")] string THKM, [Parameter(Name="THHOT", DbType="VARCHAR2(1 CHAR)")] string THHOT, [Parameter(Name="THTUAN", DbType="VARCHAR2(1 CHAR)")] string THTUAN, [Parameter(Name="THBAN", DbType="VARCHAR2(1 CHAR)")] string THBAN)
        {
            IExecuteResult _SUASANPHAM1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MASP, MALOAI, NAME, GIABAN, GIAKM, MOTA, ANH, THKM, THHOT, THTUAN, THBAN);
            return ((System.Nullable<System.Decimal>)(_SUASANPHAM1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETSLDH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_DDH_HD.GET_SL_DH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETSLDH1()
        {
            IExecuteResult _GETSLDH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETSLDH1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETTTGDDH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_DDH_HD.GET_TTG_DDH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETTTGDDH1()
        {
            IExecuteResult _GETTTGDDH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
            return ((System.Nullable<System.Decimal>)(_GETTTGDDH1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for XUATHOADON1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_DDH_HD.XUAT_HOADON", IsComposable=true)]
        public System.Nullable<System.Decimal> XUATHOADON1([Parameter(Name="MADDH", DbType="NUMBER")] System.Nullable<decimal> MADDH, [Parameter(Name="MANV", DbType="NUMBER")] System.Nullable<decimal> MANV, [Parameter(Name="NGAYGIAO", DbType="DATE")] System.Nullable<System.DateTime> NGAYGIAO, [Parameter(Name="GHICHU", DbType="NVARCHAR2(2000)")] string GHICHU, [Parameter(Name="MSOTHUE", DbType="VARCHAR2(4000 CHAR)")] string MSOTHUE, [Parameter(Name="TENCT", DbType="NVARCHAR2(2000)")] string TENCT, [Parameter(Name="DIACHI", DbType="NVARCHAR2(2000)")] string DIACHI)
        {
            IExecuteResult _XUATHOADON1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), MADDH, MANV, NGAYGIAO, GHICHU, MSOTHUE, TENCT, DIACHI);
            return ((System.Nullable<System.Decimal>)(_XUATHOADON1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETMONTH1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG.GET_MONTH", IsComposable=true)]
        public System.Nullable<System.Decimal> GETMONTH1([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETMONTH1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETMONTH1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETYEAR1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG.GET_YEAR", IsComposable=true)]
        public System.Nullable<System.Decimal> GETYEAR1([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETYEAR1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETYEAR1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETAGE1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG.GET_AGE", IsComposable=true)]
        public System.Nullable<System.Decimal> GETAGE1([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETAGE1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETAGE1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for FNCONVERTTOVN1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG.FN_CONVERT_TO_VN", IsComposable=true)]
        public System.String FNCONVERTTOVN1([Parameter(Name="STRINPUT", DbType="NVARCHAR2(2000)")] string STRINPUT)
        {
            IExecuteResult _FNCONVERTTOVN1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), STRINPUT);
            return ((System.String)(_FNCONVERTTOVN1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for GETDAY1 in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PACKAGE_FC_CHUNG.GET_DAY", IsComposable=true)]
        public System.Nullable<System.Decimal> GETDAY1([Parameter(Name="DATEPUT", DbType="DATE")] System.Nullable<System.DateTime> DATEPUT)
        {
            IExecuteResult _GETDAY1Result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), DATEPUT);
            return ((System.Nullable<System.Decimal>)(_GETDAY1Result.ReturnValue));
        }

    
        /// <summary>
        /// There are no comments for PROCTIMDDH in the schema.
        /// </summary>
        [Function(Name=@"ADMIN.PROC_TIM_DDH")]
        public Devart.Data.Linq.ISingleResult<DONDATHANG> PROCTIMDDH([Parameter(Name="X", DbType="NUMBER")] System.Nullable<decimal> X)
        {
            IExecuteResult _PROCTIMDDHResult = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), X);
            return ((Devart.Data.Linq.ISingleResult<DONDATHANG>)(_PROCTIMDDHResult.ReturnValue));
        }
    }
}

namespace ADMINContext
{

    /// <summary>
    /// There are no comments for ADMINContext.CHITIETDDH in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.CHITIETDDH")]
    public partial class CHITIETDDH : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MASANPHAM;

        private decimal _MADONDATHANG;

        private System.Nullable<decimal> _SOLUONG;

        private System.Nullable<decimal> _THANHTIEN;

        private System.Nullable<decimal> _GIAKHMUA;
        #pragma warning restore 0649

        private EntityRef<DONDATHANG> _DONDATHANG;

        private EntityRef<SANPHAM> _SANPHAM;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASANPHAMChanging(decimal value);
        partial void OnMASANPHAMChanged();
        partial void OnMADONDATHANGChanging(decimal value);
        partial void OnMADONDATHANGChanged();
        partial void OnSOLUONGChanging(System.Nullable<decimal> value);
        partial void OnSOLUONGChanged();
        partial void OnTHANHTIENChanging(System.Nullable<decimal> value);
        partial void OnTHANHTIENChanged();
        partial void OnGIAKHMUAChanging(System.Nullable<decimal> value);
        partial void OnGIAKHMUAChanged();
        #endregion

        public CHITIETDDH()
        {
            this._DONDATHANG  = default(EntityRef<DONDATHANG>);
            this._SANPHAM  = default(EntityRef<SANPHAM>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"MA_SANPHAM", Storage = "_MASANPHAM", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MASANPHAM
        {
            get
            {
                return this._MASANPHAM;
            }
            set
            {
                if (this._MASANPHAM != value)
                {
                    if (this._SANPHAM.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMASANPHAMChanging(value);
                    this.SendPropertyChanging("MASANPHAM");
                    this._MASANPHAM = value;
                    this.SendPropertyChanged("MASANPHAM");
                    this.OnMASANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADONDATHANG in the schema.
        /// </summary>
        [Column(Name = @"MA_DONDATHANG", Storage = "_MADONDATHANG", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MADONDATHANG
        {
            get
            {
                return this._MADONDATHANG;
            }
            set
            {
                if (this._MADONDATHANG != value)
                {
                    if (this._DONDATHANG.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMADONDATHANGChanging(value);
                    this.SendPropertyChanging("MADONDATHANG");
                    this._MADONDATHANG = value;
                    this.SendPropertyChanged("MADONDATHANG");
                    this.OnMADONDATHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOLUONG in the schema.
        /// </summary>
        [Column(Storage = "_SOLUONG", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SOLUONG
        {
            get
            {
                return this._SOLUONG;
            }
            set
            {
                if (this._SOLUONG != value)
                {
                    this.OnSOLUONGChanging(value);
                    this.SendPropertyChanging("SOLUONG");
                    this._SOLUONG = value;
                    this.SendPropertyChanged("SOLUONG");
                    this.OnSOLUONGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for THANHTIEN in the schema.
        /// </summary>
        [Column(Storage = "_THANHTIEN", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> THANHTIEN
        {
            get
            {
                return this._THANHTIEN;
            }
            set
            {
                if (this._THANHTIEN != value)
                {
                    this.OnTHANHTIENChanging(value);
                    this.SendPropertyChanging("THANHTIEN");
                    this._THANHTIEN = value;
                    this.SendPropertyChanged("THANHTIEN");
                    this.OnTHANHTIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIAKHMUA in the schema.
        /// </summary>
        [Column(Storage = "_GIAKHMUA", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> GIAKHMUA
        {
            get
            {
                return this._GIAKHMUA;
            }
            set
            {
                if (this._GIAKHMUA != value)
                {
                    this.OnGIAKHMUAChanging(value);
                    this.SendPropertyChanging("GIAKHMUA");
                    this._GIAKHMUA = value;
                    this.SendPropertyChanged("GIAKHMUA");
                    this.OnGIAKHMUAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANG in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_CHITIETDDH", Storage="_DONDATHANG", ThisKey="MADONDATHANG", OtherKey="MADONDATHANG", IsForeignKey=true)]
        public DONDATHANG DONDATHANG
        {
            get
            {
                return this._DONDATHANG.Entity;
            }
            set
            {
                DONDATHANG previousValue = this._DONDATHANG.Entity;
                if ((previousValue != value) || (this._DONDATHANG.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("DONDATHANG");
                    if (previousValue != null)
                    {
                        this._DONDATHANG.Entity = null;
                        previousValue.CHITIETDDHs.Remove(this);
                    }
                    this._DONDATHANG.Entity = value;
                    if (value != null)
                    {
                        this._MADONDATHANG = value.MADONDATHANG;
                        value.CHITIETDDHs.Add(this);
                    }
                    else
                    {
                        this._MADONDATHANG = default(decimal);
                    }
                    this.SendPropertyChanged("DONDATHANG");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SANPHAM in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SANPHAM_CHITIETDDH", Storage="_SANPHAM", ThisKey="MASANPHAM", OtherKey="MASANPHAM", IsForeignKey=true)]
        public SANPHAM SANPHAM
        {
            get
            {
                return this._SANPHAM.Entity;
            }
            set
            {
                SANPHAM previousValue = this._SANPHAM.Entity;
                if ((previousValue != value) || (this._SANPHAM.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("SANPHAM");
                    if (previousValue != null)
                    {
                        this._SANPHAM.Entity = null;
                        previousValue.CHITIETDDHs.Remove(this);
                    }
                    this._SANPHAM.Entity = value;
                    if (value != null)
                    {
                        this._MASANPHAM = value.MASANPHAM;
                        value.CHITIETDDHs.Add(this);
                    }
                    else
                    {
                        this._MASANPHAM = default(decimal);
                    }
                    this.SendPropertyChanged("SANPHAM");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.DONDATHANG in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.DONDATHANG")]
    public partial class DONDATHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MADONDATHANG;

        private decimal _MANHANVIEN;

        private decimal _MAKHACHHANG;

        private decimal _MATTDDH;

        private System.Nullable<decimal> _HTGIAOHANG;

        private System.Nullable<decimal> _TONGTG;

        private System.Nullable<System.DateTime> _NGAYTAODDH;

        private string _TENNGUOINHAN;

        private string _DIACHINGUOINHAN;

        private string _SDTNGUOINHAN;

        private string _GHICHU;
        #pragma warning restore 0649

        private EntitySet<CHITIETDDH> _CHITIETDDHs;

        private EntityRef<KHACHHANG> _KHACHHANG;

        private EntityRef<NHANVIEN> _NHANVIEN;

        private EntityRef<TRANGTHAIDDH> _TRANGTHAIDDH;

        private EntitySet<HOADON> _HOADONs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMADONDATHANGChanging(decimal value);
        partial void OnMADONDATHANGChanged();
        partial void OnMANHANVIENChanging(decimal value);
        partial void OnMANHANVIENChanged();
        partial void OnMAKHACHHANGChanging(decimal value);
        partial void OnMAKHACHHANGChanged();
        partial void OnMATTDDHChanging(decimal value);
        partial void OnMATTDDHChanged();
        partial void OnHTGIAOHANGChanging(System.Nullable<decimal> value);
        partial void OnHTGIAOHANGChanged();
        partial void OnTONGTGChanging(System.Nullable<decimal> value);
        partial void OnTONGTGChanged();
        partial void OnNGAYTAODDHChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYTAODDHChanged();
        partial void OnTENNGUOINHANChanging(string value);
        partial void OnTENNGUOINHANChanged();
        partial void OnDIACHINGUOINHANChanging(string value);
        partial void OnDIACHINGUOINHANChanged();
        partial void OnSDTNGUOINHANChanging(string value);
        partial void OnSDTNGUOINHANChanged();
        partial void OnGHICHUChanging(string value);
        partial void OnGHICHUChanged();
        #endregion

        public DONDATHANG()
        {
            this._CHITIETDDHs = new EntitySet<CHITIETDDH>(new Action<CHITIETDDH>(this.attach_CHITIETDDHs), new Action<CHITIETDDH>(this.detach_CHITIETDDHs));
            this._KHACHHANG  = default(EntityRef<KHACHHANG>);
            this._NHANVIEN  = default(EntityRef<NHANVIEN>);
            this._TRANGTHAIDDH  = default(EntityRef<TRANGTHAIDDH>);
            this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MADONDATHANG in the schema.
        /// </summary>
        [Column(Name = @"MA_DONDATHANG", Storage = "_MADONDATHANG", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MADONDATHANG
        {
            get
            {
                return this._MADONDATHANG;
            }
            set
            {
                if (this._MADONDATHANG != value)
                {
                    this.OnMADONDATHANGChanging(value);
                    this.SendPropertyChanging("MADONDATHANG");
                    this._MADONDATHANG = value;
                    this.SendPropertyChanged("MADONDATHANG");
                    this.OnMADONDATHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANHANVIEN in the schema.
        /// </summary>
        [Column(Name = @"MA_NHANVIEN", Storage = "_MANHANVIEN", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MANHANVIEN
        {
            get
            {
                return this._MANHANVIEN;
            }
            set
            {
                if (this._MANHANVIEN != value)
                {
                    if (this._NHANVIEN.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMANHANVIENChanging(value);
                    this.SendPropertyChanging("MANHANVIEN");
                    this._MANHANVIEN = value;
                    this.SendPropertyChanged("MANHANVIEN");
                    this.OnMANHANVIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MAKHACHHANG in the schema.
        /// </summary>
        [Column(Name = @"MA_KHACHHANG", Storage = "_MAKHACHHANG", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MAKHACHHANG
        {
            get
            {
                return this._MAKHACHHANG;
            }
            set
            {
                if (this._MAKHACHHANG != value)
                {
                    if (this._KHACHHANG.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMAKHACHHANGChanging(value);
                    this.SendPropertyChanging("MAKHACHHANG");
                    this._MAKHACHHANG = value;
                    this.SendPropertyChanged("MAKHACHHANG");
                    this.OnMAKHACHHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATTDDH in the schema.
        /// </summary>
        [Column(Name = @"MA_TTDDH", Storage = "_MATTDDH", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MATTDDH
        {
            get
            {
                return this._MATTDDH;
            }
            set
            {
                if (this._MATTDDH != value)
                {
                    if (this._TRANGTHAIDDH.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMATTDDHChanging(value);
                    this.SendPropertyChanging("MATTDDH");
                    this._MATTDDH = value;
                    this.SendPropertyChanged("MATTDDH");
                    this.OnMATTDDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HTGIAOHANG in the schema.
        /// </summary>
        [Column(Storage = "_HTGIAOHANG", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> HTGIAOHANG
        {
            get
            {
                return this._HTGIAOHANG;
            }
            set
            {
                if (this._HTGIAOHANG != value)
                {
                    this.OnHTGIAOHANGChanging(value);
                    this.SendPropertyChanging("HTGIAOHANG");
                    this._HTGIAOHANG = value;
                    this.SendPropertyChanged("HTGIAOHANG");
                    this.OnHTGIAOHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TONGTG in the schema.
        /// </summary>
        [Column(Storage = "_TONGTG", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> TONGTG
        {
            get
            {
                return this._TONGTG;
            }
            set
            {
                if (this._TONGTG != value)
                {
                    this.OnTONGTGChanging(value);
                    this.SendPropertyChanging("TONGTG");
                    this._TONGTG = value;
                    this.SendPropertyChanged("TONGTG");
                    this.OnTONGTGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYTAODDH in the schema.
        /// </summary>
        [Column(Storage = "_NGAYTAODDH", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYTAODDH
        {
            get
            {
                return this._NGAYTAODDH;
            }
            set
            {
                if (this._NGAYTAODDH != value)
                {
                    this.OnNGAYTAODDHChanging(value);
                    this.SendPropertyChanging("NGAYTAODDH");
                    this._NGAYTAODDH = value;
                    this.SendPropertyChanged("NGAYTAODDH");
                    this.OnNGAYTAODDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNGUOINHAN in the schema.
        /// </summary>
        [Column(Storage = "_TENNGUOINHAN", DbType = "NVARCHAR2(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNGUOINHAN
        {
            get
            {
                return this._TENNGUOINHAN;
            }
            set
            {
                if (this._TENNGUOINHAN != value)
                {
                    this.OnTENNGUOINHANChanging(value);
                    this.SendPropertyChanging("TENNGUOINHAN");
                    this._TENNGUOINHAN = value;
                    this.SendPropertyChanged("TENNGUOINHAN");
                    this.OnTENNGUOINHANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIACHINGUOINHAN in the schema.
        /// </summary>
        [Column(Storage = "_DIACHINGUOINHAN", DbType = "NVARCHAR2(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIACHINGUOINHAN
        {
            get
            {
                return this._DIACHINGUOINHAN;
            }
            set
            {
                if (this._DIACHINGUOINHAN != value)
                {
                    this.OnDIACHINGUOINHANChanging(value);
                    this.SendPropertyChanging("DIACHINGUOINHAN");
                    this._DIACHINGUOINHAN = value;
                    this.SendPropertyChanged("DIACHINGUOINHAN");
                    this.OnDIACHINGUOINHANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SDTNGUOINHAN in the schema.
        /// </summary>
        [Column(Storage = "_SDTNGUOINHAN", DbType = "VARCHAR2(11 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string SDTNGUOINHAN
        {
            get
            {
                return this._SDTNGUOINHAN;
            }
            set
            {
                if (this._SDTNGUOINHAN != value)
                {
                    this.OnSDTNGUOINHANChanging(value);
                    this.SendPropertyChanging("SDTNGUOINHAN");
                    this._SDTNGUOINHAN = value;
                    this.SendPropertyChanged("SDTNGUOINHAN");
                    this.OnSDTNGUOINHANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GHICHU in the schema.
        /// </summary>
        [Column(Storage = "_GHICHU", DbType = "NVARCHAR2(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GHICHU
        {
            get
            {
                return this._GHICHU;
            }
            set
            {
                if (this._GHICHU != value)
                {
                    this.OnGHICHUChanging(value);
                    this.SendPropertyChanging("GHICHU");
                    this._GHICHU = value;
                    this.SendPropertyChanged("GHICHU");
                    this.OnGHICHUChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHITIETDDHs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_CHITIETDDH", Storage="_CHITIETDDHs", ThisKey="MADONDATHANG", OtherKey="MADONDATHANG", DeleteRule="NO ACTION")]
        public EntitySet<CHITIETDDH> CHITIETDDHs
        {
            get
            {
                return this._CHITIETDDHs;
            }
            set
            {
                this._CHITIETDDHs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for KHACHHANG in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="KHACHHANG_DONDATHANG", Storage="_KHACHHANG", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG", IsForeignKey=true)]
        public KHACHHANG KHACHHANG
        {
            get
            {
                return this._KHACHHANG.Entity;
            }
            set
            {
                KHACHHANG previousValue = this._KHACHHANG.Entity;
                if ((previousValue != value) || (this._KHACHHANG.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("KHACHHANG");
                    if (previousValue != null)
                    {
                        this._KHACHHANG.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._KHACHHANG.Entity = value;
                    if (value != null)
                    {
                        this._MAKHACHHANG = value.MAKHACHHANG;
                        value.DONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MAKHACHHANG = default(decimal);
                    }
                    this.SendPropertyChanged("KHACHHANG");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NHANVIEN in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_DONDATHANG", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
        public NHANVIEN NHANVIEN
        {
            get
            {
                return this._NHANVIEN.Entity;
            }
            set
            {
                NHANVIEN previousValue = this._NHANVIEN.Entity;
                if ((previousValue != value) || (this._NHANVIEN.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("NHANVIEN");
                    if (previousValue != null)
                    {
                        this._NHANVIEN.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._NHANVIEN.Entity = value;
                    if (value != null)
                    {
                        this._MANHANVIEN = value.MANHANVIEN;
                        value.DONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MANHANVIEN = default(decimal);
                    }
                    this.SendPropertyChanged("NHANVIEN");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIDDH in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="TRANGTHAIDDH_DONDATHANG", Storage="_TRANGTHAIDDH", ThisKey="MATTDDH", OtherKey="MATTDDH", IsForeignKey=true)]
        public TRANGTHAIDDH TRANGTHAIDDH
        {
            get
            {
                return this._TRANGTHAIDDH.Entity;
            }
            set
            {
                TRANGTHAIDDH previousValue = this._TRANGTHAIDDH.Entity;
                if ((previousValue != value) || (this._TRANGTHAIDDH.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("TRANGTHAIDDH");
                    if (previousValue != null)
                    {
                        this._TRANGTHAIDDH.Entity = null;
                        previousValue.DONDATHANGs.Remove(this);
                    }
                    this._TRANGTHAIDDH.Entity = value;
                    if (value != null)
                    {
                        this._MATTDDH = value.MATTDDH;
                        value.DONDATHANGs.Add(this);
                    }
                    else
                    {
                        this._MATTDDH = default(decimal);
                    }
                    this.SendPropertyChanged("TRANGTHAIDDH");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HOADONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_HOADON", Storage="_HOADONs", ThisKey="MADONDATHANG", OtherKey="MADONDATHANG", DeleteRule="NO ACTION")]
        public EntitySet<HOADON> HOADONs
        {
            get
            {
                return this._HOADONs;
            }
            set
            {
                this._HOADONs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_CHITIETDDHs(CHITIETDDH entity)
        {
            this.SendPropertyChanging("CHITIETDDHs");
            entity.DONDATHANG = this;
        }
    
        private void detach_CHITIETDDHs(CHITIETDDH entity)
        {
            this.SendPropertyChanging("CHITIETDDHs");
            entity.DONDATHANG = null;
        }

        private void attach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.DONDATHANG = this;
        }
    
        private void detach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.DONDATHANG = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.HOADON in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.HOADON")]
    public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MAHOADON;

        private decimal _MADONDATHANG;

        private decimal _MANHANVIEN;

        private decimal _MATTHD;

        private System.Nullable<System.DateTime> _NGAYTAOHD;

        private System.Nullable<System.DateTime> _NGAYGIAOHD;

        private string _GHICHUHD;

        private string _MST;

        private string _TENCONGTY;

        private string _DIACHICONTY;
        #pragma warning restore 0649

        private EntityRef<DONDATHANG> _DONDATHANG;

        private EntityRef<NHANVIEN> _NHANVIEN;

        private EntityRef<TRANGTHAIHD> _TRANGTHAIHD;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAHOADONChanging(decimal value);
        partial void OnMAHOADONChanged();
        partial void OnMADONDATHANGChanging(decimal value);
        partial void OnMADONDATHANGChanged();
        partial void OnMANHANVIENChanging(decimal value);
        partial void OnMANHANVIENChanged();
        partial void OnMATTHDChanging(decimal value);
        partial void OnMATTHDChanged();
        partial void OnNGAYTAOHDChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYTAOHDChanged();
        partial void OnNGAYGIAOHDChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYGIAOHDChanged();
        partial void OnGHICHUHDChanging(string value);
        partial void OnGHICHUHDChanged();
        partial void OnMSTChanging(string value);
        partial void OnMSTChanged();
        partial void OnTENCONGTYChanging(string value);
        partial void OnTENCONGTYChanged();
        partial void OnDIACHICONTYChanging(string value);
        partial void OnDIACHICONTYChanged();
        #endregion

        public HOADON()
        {
            this._DONDATHANG  = default(EntityRef<DONDATHANG>);
            this._NHANVIEN  = default(EntityRef<NHANVIEN>);
            this._TRANGTHAIHD  = default(EntityRef<TRANGTHAIHD>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAHOADON in the schema.
        /// </summary>
        [Column(Name = @"MA_HOADON", Storage = "_MAHOADON", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MAHOADON
        {
            get
            {
                return this._MAHOADON;
            }
            set
            {
                if (this._MAHOADON != value)
                {
                    this.OnMAHOADONChanging(value);
                    this.SendPropertyChanging("MAHOADON");
                    this._MAHOADON = value;
                    this.SendPropertyChanged("MAHOADON");
                    this.OnMAHOADONChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MADONDATHANG in the schema.
        /// </summary>
        [Column(Name = @"MA_DONDATHANG", Storage = "_MADONDATHANG", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MADONDATHANG
        {
            get
            {
                return this._MADONDATHANG;
            }
            set
            {
                if (this._MADONDATHANG != value)
                {
                    if (this._DONDATHANG.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMADONDATHANGChanging(value);
                    this.SendPropertyChanging("MADONDATHANG");
                    this._MADONDATHANG = value;
                    this.SendPropertyChanged("MADONDATHANG");
                    this.OnMADONDATHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MANHANVIEN in the schema.
        /// </summary>
        [Column(Name = @"MA_NHANVIEN", Storage = "_MANHANVIEN", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MANHANVIEN
        {
            get
            {
                return this._MANHANVIEN;
            }
            set
            {
                if (this._MANHANVIEN != value)
                {
                    if (this._NHANVIEN.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMANHANVIENChanging(value);
                    this.SendPropertyChanging("MANHANVIEN");
                    this._MANHANVIEN = value;
                    this.SendPropertyChanged("MANHANVIEN");
                    this.OnMANHANVIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATTHD in the schema.
        /// </summary>
        [Column(Name = @"MA_TTHD", Storage = "_MATTHD", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MATTHD
        {
            get
            {
                return this._MATTHD;
            }
            set
            {
                if (this._MATTHD != value)
                {
                    if (this._TRANGTHAIHD.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMATTHDChanging(value);
                    this.SendPropertyChanging("MATTHD");
                    this._MATTHD = value;
                    this.SendPropertyChanged("MATTHD");
                    this.OnMATTHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYTAOHD in the schema.
        /// </summary>
        [Column(Storage = "_NGAYTAOHD", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYTAOHD
        {
            get
            {
                return this._NGAYTAOHD;
            }
            set
            {
                if (this._NGAYTAOHD != value)
                {
                    this.OnNGAYTAOHDChanging(value);
                    this.SendPropertyChanging("NGAYTAOHD");
                    this._NGAYTAOHD = value;
                    this.SendPropertyChanged("NGAYTAOHD");
                    this.OnNGAYTAOHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYGIAOHD in the schema.
        /// </summary>
        [Column(Storage = "_NGAYGIAOHD", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYGIAOHD
        {
            get
            {
                return this._NGAYGIAOHD;
            }
            set
            {
                if (this._NGAYGIAOHD != value)
                {
                    this.OnNGAYGIAOHDChanging(value);
                    this.SendPropertyChanging("NGAYGIAOHD");
                    this._NGAYGIAOHD = value;
                    this.SendPropertyChanged("NGAYGIAOHD");
                    this.OnNGAYGIAOHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GHICHUHD in the schema.
        /// </summary>
        [Column(Storage = "_GHICHUHD", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GHICHUHD
        {
            get
            {
                return this._GHICHUHD;
            }
            set
            {
                if (this._GHICHUHD != value)
                {
                    this.OnGHICHUHDChanging(value);
                    this.SendPropertyChanging("GHICHUHD");
                    this._GHICHUHD = value;
                    this.SendPropertyChanged("GHICHUHD");
                    this.OnGHICHUHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MST in the schema.
        /// </summary>
        [Column(Storage = "_MST", DbType = "VARCHAR2(10 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MST
        {
            get
            {
                return this._MST;
            }
            set
            {
                if (this._MST != value)
                {
                    this.OnMSTChanging(value);
                    this.SendPropertyChanging("MST");
                    this._MST = value;
                    this.SendPropertyChanged("MST");
                    this.OnMSTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENCONGTY in the schema.
        /// </summary>
        [Column(Storage = "_TENCONGTY", DbType = "NVARCHAR2(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENCONGTY
        {
            get
            {
                return this._TENCONGTY;
            }
            set
            {
                if (this._TENCONGTY != value)
                {
                    this.OnTENCONGTYChanging(value);
                    this.SendPropertyChanging("TENCONGTY");
                    this._TENCONGTY = value;
                    this.SendPropertyChanged("TENCONGTY");
                    this.OnTENCONGTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIACHICONTY in the schema.
        /// </summary>
        [Column(Storage = "_DIACHICONTY", DbType = "NVARCHAR2(250) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIACHICONTY
        {
            get
            {
                return this._DIACHICONTY;
            }
            set
            {
                if (this._DIACHICONTY != value)
                {
                    this.OnDIACHICONTYChanging(value);
                    this.SendPropertyChanging("DIACHICONTY");
                    this._DIACHICONTY = value;
                    this.SendPropertyChanged("DIACHICONTY");
                    this.OnDIACHICONTYChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANG in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="DONDATHANG_HOADON", Storage="_DONDATHANG", ThisKey="MADONDATHANG", OtherKey="MADONDATHANG", IsForeignKey=true)]
        public DONDATHANG DONDATHANG
        {
            get
            {
                return this._DONDATHANG.Entity;
            }
            set
            {
                DONDATHANG previousValue = this._DONDATHANG.Entity;
                if ((previousValue != value) || (this._DONDATHANG.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("DONDATHANG");
                    if (previousValue != null)
                    {
                        this._DONDATHANG.Entity = null;
                        previousValue.HOADONs.Remove(this);
                    }
                    this._DONDATHANG.Entity = value;
                    if (value != null)
                    {
                        this._MADONDATHANG = value.MADONDATHANG;
                        value.HOADONs.Add(this);
                    }
                    else
                    {
                        this._MADONDATHANG = default(decimal);
                    }
                    this.SendPropertyChanged("DONDATHANG");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NHANVIEN in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", IsForeignKey=true)]
        public NHANVIEN NHANVIEN
        {
            get
            {
                return this._NHANVIEN.Entity;
            }
            set
            {
                NHANVIEN previousValue = this._NHANVIEN.Entity;
                if ((previousValue != value) || (this._NHANVIEN.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("NHANVIEN");
                    if (previousValue != null)
                    {
                        this._NHANVIEN.Entity = null;
                        previousValue.HOADONs.Remove(this);
                    }
                    this._NHANVIEN.Entity = value;
                    if (value != null)
                    {
                        this._MANHANVIEN = value.MANHANVIEN;
                        value.HOADONs.Add(this);
                    }
                    else
                    {
                        this._MANHANVIEN = default(decimal);
                    }
                    this.SendPropertyChanged("NHANVIEN");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIHD in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="TRANGTHAIHD_HOADON", Storage="_TRANGTHAIHD", ThisKey="MATTHD", OtherKey="MATTHD", IsForeignKey=true)]
        public TRANGTHAIHD TRANGTHAIHD
        {
            get
            {
                return this._TRANGTHAIHD.Entity;
            }
            set
            {
                TRANGTHAIHD previousValue = this._TRANGTHAIHD.Entity;
                if ((previousValue != value) || (this._TRANGTHAIHD.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("TRANGTHAIHD");
                    if (previousValue != null)
                    {
                        this._TRANGTHAIHD.Entity = null;
                        previousValue.HOADONs.Remove(this);
                    }
                    this._TRANGTHAIHD.Entity = value;
                    if (value != null)
                    {
                        this._MATTHD = value.MATTHD;
                        value.HOADONs.Add(this);
                    }
                    else
                    {
                        this._MATTHD = default(decimal);
                    }
                    this.SendPropertyChanged("TRANGTHAIHD");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.KHACHHANG in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.KHACHHANG")]
    public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MAKHACHHANG;

        private string _TENKHACHHANG;

        private string _TENDANGNHAPKH;

        private string _MATKHAUKH;

        private string _DIENTHOAI;

        private string _DIACHI;

        private string _EMAIL;

        private string _GIOITINHKH;

        private System.Nullable<System.DateTime> _NGAYSINHKH;
        #pragma warning restore 0649

        private EntitySet<DONDATHANG> _DONDATHANGs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAKHACHHANGChanging(decimal value);
        partial void OnMAKHACHHANGChanged();
        partial void OnTENKHACHHANGChanging(string value);
        partial void OnTENKHACHHANGChanged();
        partial void OnTENDANGNHAPKHChanging(string value);
        partial void OnTENDANGNHAPKHChanged();
        partial void OnMATKHAUKHChanging(string value);
        partial void OnMATKHAUKHChanged();
        partial void OnDIENTHOAIChanging(string value);
        partial void OnDIENTHOAIChanged();
        partial void OnDIACHIChanging(string value);
        partial void OnDIACHIChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnGIOITINHKHChanging(string value);
        partial void OnGIOITINHKHChanged();
        partial void OnNGAYSINHKHChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYSINHKHChanged();
        #endregion

        public KHACHHANG()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAKHACHHANG in the schema.
        /// </summary>
        [Column(Name = @"MA_KHACHHANG", Storage = "_MAKHACHHANG", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MAKHACHHANG
        {
            get
            {
                return this._MAKHACHHANG;
            }
            set
            {
                if (this._MAKHACHHANG != value)
                {
                    this.OnMAKHACHHANGChanging(value);
                    this.SendPropertyChanging("MAKHACHHANG");
                    this._MAKHACHHANG = value;
                    this.SendPropertyChanged("MAKHACHHANG");
                    this.OnMAKHACHHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENKHACHHANG in the schema.
        /// </summary>
        [Column(Storage = "_TENKHACHHANG", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENKHACHHANG
        {
            get
            {
                return this._TENKHACHHANG;
            }
            set
            {
                if (this._TENKHACHHANG != value)
                {
                    this.OnTENKHACHHANGChanging(value);
                    this.SendPropertyChanging("TENKHACHHANG");
                    this._TENKHACHHANG = value;
                    this.SendPropertyChanged("TENKHACHHANG");
                    this.OnTENKHACHHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENDANGNHAPKH in the schema.
        /// </summary>
        [Column(Storage = "_TENDANGNHAPKH", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENDANGNHAPKH
        {
            get
            {
                return this._TENDANGNHAPKH;
            }
            set
            {
                if (this._TENDANGNHAPKH != value)
                {
                    this.OnTENDANGNHAPKHChanging(value);
                    this.SendPropertyChanging("TENDANGNHAPKH");
                    this._TENDANGNHAPKH = value;
                    this.SendPropertyChanged("TENDANGNHAPKH");
                    this.OnTENDANGNHAPKHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATKHAUKH in the schema.
        /// </summary>
        [Column(Storage = "_MATKHAUKH", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATKHAUKH
        {
            get
            {
                return this._MATKHAUKH;
            }
            set
            {
                if (this._MATKHAUKH != value)
                {
                    this.OnMATKHAUKHChanging(value);
                    this.SendPropertyChanging("MATKHAUKH");
                    this._MATKHAUKH = value;
                    this.SendPropertyChanged("MATKHAUKH");
                    this.OnMATKHAUKHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIENTHOAI in the schema.
        /// </summary>
        [Column(Storage = "_DIENTHOAI", DbType = "VARCHAR2(11 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIENTHOAI
        {
            get
            {
                return this._DIENTHOAI;
            }
            set
            {
                if (this._DIENTHOAI != value)
                {
                    this.OnDIENTHOAIChanging(value);
                    this.SendPropertyChanging("DIENTHOAI");
                    this._DIENTHOAI = value;
                    this.SendPropertyChanged("DIENTHOAI");
                    this.OnDIENTHOAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIACHI in the schema.
        /// </summary>
        [Column(Storage = "_DIACHI", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIACHI
        {
            get
            {
                return this._DIACHI;
            }
            set
            {
                if (this._DIACHI != value)
                {
                    this.OnDIACHIChanging(value);
                    this.SendPropertyChanging("DIACHI");
                    this._DIACHI = value;
                    this.SendPropertyChanged("DIACHI");
                    this.OnDIACHIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging("EMAIL");
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIOITINHKH in the schema.
        /// </summary>
        [Column(Storage = "_GIOITINHKH", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string GIOITINHKH
        {
            get
            {
                return this._GIOITINHKH;
            }
            set
            {
                if (this._GIOITINHKH != value)
                {
                    this.OnGIOITINHKHChanging(value);
                    this.SendPropertyChanging("GIOITINHKH");
                    this._GIOITINHKH = value;
                    this.SendPropertyChanged("GIOITINHKH");
                    this.OnGIOITINHKHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYSINHKH in the schema.
        /// </summary>
        [Column(Storage = "_NGAYSINHKH", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYSINHKH
        {
            get
            {
                return this._NGAYSINHKH;
            }
            set
            {
                if (this._NGAYSINHKH != value)
                {
                    this.OnNGAYSINHKHChanging(value);
                    this.SendPropertyChanging("NGAYSINHKH");
                    this._NGAYSINHKH = value;
                    this.SendPropertyChanged("NGAYSINHKH");
                    this.OnNGAYSINHKHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="KHACHHANG_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MAKHACHHANG", OtherKey="MAKHACHHANG", DeleteRule="NO ACTION")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.KHACHHANG = this;
        }
    
        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.KHACHHANG = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.LOAISP in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.LOAISP")]
    public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MALOAISP;

        private string _TENLOAI;

        private string _URL;
        #pragma warning restore 0649

        private EntitySet<SANPHAM> _SANPHAMs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMALOAISPChanging(decimal value);
        partial void OnMALOAISPChanged();
        partial void OnTENLOAIChanging(string value);
        partial void OnTENLOAIChanged();
        partial void OnURLChanging(string value);
        partial void OnURLChanged();
        #endregion

        public LOAISP()
        {
            this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MALOAISP in the schema.
        /// </summary>
        [Column(Name = @"MA_LOAISP", Storage = "_MALOAISP", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MALOAISP
        {
            get
            {
                return this._MALOAISP;
            }
            set
            {
                if (this._MALOAISP != value)
                {
                    this.OnMALOAISPChanging(value);
                    this.SendPropertyChanging("MALOAISP");
                    this._MALOAISP = value;
                    this.SendPropertyChanged("MALOAISP");
                    this.OnMALOAISPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENLOAI in the schema.
        /// </summary>
        [Column(Storage = "_TENLOAI", DbType = "NVARCHAR2(20) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENLOAI
        {
            get
            {
                return this._TENLOAI;
            }
            set
            {
                if (this._TENLOAI != value)
                {
                    this.OnTENLOAIChanging(value);
                    this.SendPropertyChanging("TENLOAI");
                    this._TENLOAI = value;
                    this.SendPropertyChanged("TENLOAI");
                    this.OnTENLOAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for URL in the schema.
        /// </summary>
        [Column(Storage = "_URL", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string URL
        {
            get
            {
                return this._URL;
            }
            set
            {
                if (this._URL != value)
                {
                    this.OnURLChanging(value);
                    this.SendPropertyChanging("URL");
                    this._URL = value;
                    this.SendPropertyChanged("URL");
                    this.OnURLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SANPHAMs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="MALOAISP", OtherKey="MALOAISP", DeleteRule="NO ACTION")]
        public EntitySet<SANPHAM> SANPHAMs
        {
            get
            {
                return this._SANPHAMs;
            }
            set
            {
                this._SANPHAMs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SANPHAMs(SANPHAM entity)
        {
            this.SendPropertyChanging("SANPHAMs");
            entity.LOAISP = this;
        }
    
        private void detach_SANPHAMs(SANPHAM entity)
        {
            this.SendPropertyChanging("SANPHAMs");
            entity.LOAISP = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.NHANVIEN in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.NHANVIEN")]
    public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MANHANVIEN;

        private decimal _MAQUYEN;

        private string _TENDANGNHAPNV;

        private string _MATKHAUNV;

        private string _ANHDAIDIEN;

        private string _EMAIL;

        private string _TENNHANVIEN;

        private System.Nullable<System.DateTime> _NGAYSINH;

        private string _PHAI;
        #pragma warning restore 0649

        private EntitySet<DONDATHANG> _DONDATHANGs;

        private EntitySet<HOADON> _HOADONs;

        private EntityRef<QUYEN> _QUYEN;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMANHANVIENChanging(decimal value);
        partial void OnMANHANVIENChanged();
        partial void OnMAQUYENChanging(decimal value);
        partial void OnMAQUYENChanged();
        partial void OnTENDANGNHAPNVChanging(string value);
        partial void OnTENDANGNHAPNVChanged();
        partial void OnMATKHAUNVChanging(string value);
        partial void OnMATKHAUNVChanged();
        partial void OnANHDAIDIENChanging(string value);
        partial void OnANHDAIDIENChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnTENNHANVIENChanging(string value);
        partial void OnTENNHANVIENChanged();
        partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYSINHChanged();
        partial void OnPHAIChanging(string value);
        partial void OnPHAIChanged();
        #endregion

        public NHANVIEN()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
            this._QUYEN  = default(EntityRef<QUYEN>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MANHANVIEN in the schema.
        /// </summary>
        [Column(Name = @"MA_NHANVIEN", Storage = "_MANHANVIEN", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MANHANVIEN
        {
            get
            {
                return this._MANHANVIEN;
            }
            set
            {
                if (this._MANHANVIEN != value)
                {
                    this.OnMANHANVIENChanging(value);
                    this.SendPropertyChanging("MANHANVIEN");
                    this._MANHANVIEN = value;
                    this.SendPropertyChanged("MANHANVIEN");
                    this.OnMANHANVIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MAQUYEN in the schema.
        /// </summary>
        [Column(Name = @"MA_QUYEN", Storage = "_MAQUYEN", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MAQUYEN
        {
            get
            {
                return this._MAQUYEN;
            }
            set
            {
                if (this._MAQUYEN != value)
                {
                    if (this._QUYEN.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMAQUYENChanging(value);
                    this.SendPropertyChanging("MAQUYEN");
                    this._MAQUYEN = value;
                    this.SendPropertyChanged("MAQUYEN");
                    this.OnMAQUYENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENDANGNHAPNV in the schema.
        /// </summary>
        [Column(Storage = "_TENDANGNHAPNV", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENDANGNHAPNV
        {
            get
            {
                return this._TENDANGNHAPNV;
            }
            set
            {
                if (this._TENDANGNHAPNV != value)
                {
                    this.OnTENDANGNHAPNVChanging(value);
                    this.SendPropertyChanging("TENDANGNHAPNV");
                    this._TENDANGNHAPNV = value;
                    this.SendPropertyChanged("TENDANGNHAPNV");
                    this.OnTENDANGNHAPNVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MATKHAUNV in the schema.
        /// </summary>
        [Column(Storage = "_MATKHAUNV", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MATKHAUNV
        {
            get
            {
                return this._MATKHAUNV;
            }
            set
            {
                if (this._MATKHAUNV != value)
                {
                    this.OnMATKHAUNVChanging(value);
                    this.SendPropertyChanging("MATKHAUNV");
                    this._MATKHAUNV = value;
                    this.SendPropertyChanged("MATKHAUNV");
                    this.OnMATKHAUNVChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ANHDAIDIEN in the schema.
        /// </summary>
        [Column(Storage = "_ANHDAIDIEN", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ANHDAIDIEN
        {
            get
            {
                return this._ANHDAIDIEN;
            }
            set
            {
                if (this._ANHDAIDIEN != value)
                {
                    this.OnANHDAIDIENChanging(value);
                    this.SendPropertyChanging("ANHDAIDIEN");
                    this._ANHDAIDIEN = value;
                    this.SendPropertyChanged("ANHDAIDIEN");
                    this.OnANHDAIDIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging("EMAIL");
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNHANVIEN in the schema.
        /// </summary>
        [Column(Storage = "_TENNHANVIEN", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNHANVIEN
        {
            get
            {
                return this._TENNHANVIEN;
            }
            set
            {
                if (this._TENNHANVIEN != value)
                {
                    this.OnTENNHANVIENChanging(value);
                    this.SendPropertyChanging("TENNHANVIEN");
                    this._TENNHANVIEN = value;
                    this.SendPropertyChanged("TENNHANVIEN");
                    this.OnTENNHANVIENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYSINH in the schema.
        /// </summary>
        [Column(Storage = "_NGAYSINH", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYSINH
        {
            get
            {
                return this._NGAYSINH;
            }
            set
            {
                if (this._NGAYSINH != value)
                {
                    this.OnNGAYSINHChanging(value);
                    this.SendPropertyChanging("NGAYSINH");
                    this._NGAYSINH = value;
                    this.SendPropertyChanged("NGAYSINH");
                    this.OnNGAYSINHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for PHAI in the schema.
        /// </summary>
        [Column(Storage = "_PHAI", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string PHAI
        {
            get
            {
                return this._PHAI;
            }
            set
            {
                if (this._PHAI != value)
                {
                    this.OnPHAIChanging(value);
                    this.SendPropertyChanging("PHAI");
                    this._PHAI = value;
                    this.SendPropertyChanged("PHAI");
                    this.OnPHAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", DeleteRule="NO ACTION")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for HOADONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANHANVIEN", OtherKey="MANHANVIEN", DeleteRule="NO ACTION")]
        public EntitySet<HOADON> HOADONs
        {
            get
            {
                return this._HOADONs;
            }
            set
            {
                this._HOADONs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for QUYEN in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="QUYEN_NHANVIEN", Storage="_QUYEN", ThisKey="MAQUYEN", OtherKey="MAQUYEN", IsForeignKey=true)]
        public QUYEN QUYEN
        {
            get
            {
                return this._QUYEN.Entity;
            }
            set
            {
                QUYEN previousValue = this._QUYEN.Entity;
                if ((previousValue != value) || (this._QUYEN.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("QUYEN");
                    if (previousValue != null)
                    {
                        this._QUYEN.Entity = null;
                        previousValue.NHANVIENs.Remove(this);
                    }
                    this._QUYEN.Entity = value;
                    if (value != null)
                    {
                        this._MAQUYEN = value.MAQUYEN;
                        value.NHANVIENs.Add(this);
                    }
                    else
                    {
                        this._MAQUYEN = default(decimal);
                    }
                    this.SendPropertyChanged("QUYEN");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHANVIEN = this;
        }
    
        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.NHANVIEN = null;
        }

        private void attach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.NHANVIEN = this;
        }
    
        private void detach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.NHANVIEN = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.QUYEN in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.QUYEN")]
    public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MAQUYEN;

        private string _TENQUYEN;
        #pragma warning restore 0649

        private EntitySet<NHANVIEN> _NHANVIENs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMAQUYENChanging(decimal value);
        partial void OnMAQUYENChanged();
        partial void OnTENQUYENChanging(string value);
        partial void OnTENQUYENChanged();
        #endregion

        public QUYEN()
        {
            this._NHANVIENs = new EntitySet<NHANVIEN>(new Action<NHANVIEN>(this.attach_NHANVIENs), new Action<NHANVIEN>(this.detach_NHANVIENs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MAQUYEN in the schema.
        /// </summary>
        [Column(Name = @"MA_QUYEN", Storage = "_MAQUYEN", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MAQUYEN
        {
            get
            {
                return this._MAQUYEN;
            }
            set
            {
                if (this._MAQUYEN != value)
                {
                    this.OnMAQUYENChanging(value);
                    this.SendPropertyChanging("MAQUYEN");
                    this._MAQUYEN = value;
                    this.SendPropertyChanged("MAQUYEN");
                    this.OnMAQUYENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENQUYEN in the schema.
        /// </summary>
        [Column(Storage = "_TENQUYEN", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENQUYEN
        {
            get
            {
                return this._TENQUYEN;
            }
            set
            {
                if (this._TENQUYEN != value)
                {
                    this.OnTENQUYENChanging(value);
                    this.SendPropertyChanging("TENQUYEN");
                    this._TENQUYEN = value;
                    this.SendPropertyChanged("TENQUYEN");
                    this.OnTENQUYENChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NHANVIENs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="QUYEN_NHANVIEN", Storage="_NHANVIENs", ThisKey="MAQUYEN", OtherKey="MAQUYEN", DeleteRule="NO ACTION")]
        public EntitySet<NHANVIEN> NHANVIENs
        {
            get
            {
                return this._NHANVIENs;
            }
            set
            {
                this._NHANVIENs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_NHANVIENs(NHANVIEN entity)
        {
            this.SendPropertyChanging("NHANVIENs");
            entity.QUYEN = this;
        }
    
        private void detach_NHANVIENs(NHANVIEN entity)
        {
            this.SendPropertyChanging("NHANVIENs");
            entity.QUYEN = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.SANPHAM in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.SANPHAM")]
    public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MASANPHAM;

        private decimal _MALOAISP;

        private string _TENSANPHAM;

        private System.Nullable<decimal> _GIABAN;

        private System.Nullable<decimal> _GIAKM;

        private string _MOTASP;

        private string _ANHSANPHAM;

        private string _TRANGTHAIKM;

        private string _TRANGTHAIHOT;

        private string _TRANGTHAITOPWEEK;

        private System.Nullable<System.DateTime> _NGAYTAOSP;

        private string _URL;

        private string _TRANGTHAIBAN;
        #pragma warning restore 0649

        private EntitySet<CHITIETDDH> _CHITIETDDHs;

        private EntityRef<LOAISP> _LOAISP;

        private EntitySet<TAG> _TAGs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASANPHAMChanging(decimal value);
        partial void OnMASANPHAMChanged();
        partial void OnMALOAISPChanging(decimal value);
        partial void OnMALOAISPChanged();
        partial void OnTENSANPHAMChanging(string value);
        partial void OnTENSANPHAMChanged();
        partial void OnGIABANChanging(System.Nullable<decimal> value);
        partial void OnGIABANChanged();
        partial void OnGIAKMChanging(System.Nullable<decimal> value);
        partial void OnGIAKMChanged();
        partial void OnMOTASPChanging(string value);
        partial void OnMOTASPChanged();
        partial void OnANHSANPHAMChanging(string value);
        partial void OnANHSANPHAMChanged();
        partial void OnTRANGTHAIKMChanging(string value);
        partial void OnTRANGTHAIKMChanged();
        partial void OnTRANGTHAIHOTChanging(string value);
        partial void OnTRANGTHAIHOTChanged();
        partial void OnTRANGTHAITOPWEEKChanging(string value);
        partial void OnTRANGTHAITOPWEEKChanged();
        partial void OnNGAYTAOSPChanging(System.Nullable<System.DateTime> value);
        partial void OnNGAYTAOSPChanged();
        partial void OnURLChanging(string value);
        partial void OnURLChanged();
        partial void OnTRANGTHAIBANChanging(string value);
        partial void OnTRANGTHAIBANChanged();
        #endregion

        public SANPHAM()
        {
            this._CHITIETDDHs = new EntitySet<CHITIETDDH>(new Action<CHITIETDDH>(this.attach_CHITIETDDHs), new Action<CHITIETDDH>(this.detach_CHITIETDDHs));
            this._LOAISP  = default(EntityRef<LOAISP>);
            this._TAGs = new EntitySet<TAG>(new Action<TAG>(this.attach_TAGs), new Action<TAG>(this.detach_TAGs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"MA_SANPHAM", Storage = "_MASANPHAM", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MASANPHAM
        {
            get
            {
                return this._MASANPHAM;
            }
            set
            {
                if (this._MASANPHAM != value)
                {
                    this.OnMASANPHAMChanging(value);
                    this.SendPropertyChanging("MASANPHAM");
                    this._MASANPHAM = value;
                    this.SendPropertyChanged("MASANPHAM");
                    this.OnMASANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MALOAISP in the schema.
        /// </summary>
        [Column(Name = @"MA_LOAISP", Storage = "_MALOAISP", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MALOAISP
        {
            get
            {
                return this._MALOAISP;
            }
            set
            {
                if (this._MALOAISP != value)
                {
                    if (this._LOAISP.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnMALOAISPChanging(value);
                    this.SendPropertyChanging("MALOAISP");
                    this._MALOAISP = value;
                    this.SendPropertyChanged("MALOAISP");
                    this.OnMALOAISPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_TENSANPHAM", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSANPHAM
        {
            get
            {
                return this._TENSANPHAM;
            }
            set
            {
                if (this._TENSANPHAM != value)
                {
                    this.OnTENSANPHAMChanging(value);
                    this.SendPropertyChanging("TENSANPHAM");
                    this._TENSANPHAM = value;
                    this.SendPropertyChanged("TENSANPHAM");
                    this.OnTENSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIABAN in the schema.
        /// </summary>
        [Column(Storage = "_GIABAN", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> GIABAN
        {
            get
            {
                return this._GIABAN;
            }
            set
            {
                if (this._GIABAN != value)
                {
                    this.OnGIABANChanging(value);
                    this.SendPropertyChanging("GIABAN");
                    this._GIABAN = value;
                    this.SendPropertyChanged("GIABAN");
                    this.OnGIABANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIAKM in the schema.
        /// </summary>
        [Column(Storage = "_GIAKM", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> GIAKM
        {
            get
            {
                return this._GIAKM;
            }
            set
            {
                if (this._GIAKM != value)
                {
                    this.OnGIAKMChanging(value);
                    this.SendPropertyChanging("GIAKM");
                    this._GIAKM = value;
                    this.SendPropertyChanged("GIAKM");
                    this.OnGIAKMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTASP in the schema.
        /// </summary>
        [Column(Storage = "_MOTASP", DbType = "NCLOB NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTASP
        {
            get
            {
                return this._MOTASP;
            }
            set
            {
                if (this._MOTASP != value)
                {
                    this.OnMOTASPChanging(value);
                    this.SendPropertyChanging("MOTASP");
                    this._MOTASP = value;
                    this.SendPropertyChanged("MOTASP");
                    this.OnMOTASPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ANHSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_ANHSANPHAM", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ANHSANPHAM
        {
            get
            {
                return this._ANHSANPHAM;
            }
            set
            {
                if (this._ANHSANPHAM != value)
                {
                    this.OnANHSANPHAMChanging(value);
                    this.SendPropertyChanging("ANHSANPHAM");
                    this._ANHSANPHAM = value;
                    this.SendPropertyChanged("ANHSANPHAM");
                    this.OnANHSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIKM in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAIKM", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAIKM
        {
            get
            {
                return this._TRANGTHAIKM;
            }
            set
            {
                if (this._TRANGTHAIKM != value)
                {
                    this.OnTRANGTHAIKMChanging(value);
                    this.SendPropertyChanging("TRANGTHAIKM");
                    this._TRANGTHAIKM = value;
                    this.SendPropertyChanged("TRANGTHAIKM");
                    this.OnTRANGTHAIKMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIHOT in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAIHOT", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAIHOT
        {
            get
            {
                return this._TRANGTHAIHOT;
            }
            set
            {
                if (this._TRANGTHAIHOT != value)
                {
                    this.OnTRANGTHAIHOTChanging(value);
                    this.SendPropertyChanging("TRANGTHAIHOT");
                    this._TRANGTHAIHOT = value;
                    this.SendPropertyChanged("TRANGTHAIHOT");
                    this.OnTRANGTHAIHOTChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAITOPWEEK in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAITOPWEEK", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAITOPWEEK
        {
            get
            {
                return this._TRANGTHAITOPWEEK;
            }
            set
            {
                if (this._TRANGTHAITOPWEEK != value)
                {
                    this.OnTRANGTHAITOPWEEKChanging(value);
                    this.SendPropertyChanging("TRANGTHAITOPWEEK");
                    this._TRANGTHAITOPWEEK = value;
                    this.SendPropertyChanged("TRANGTHAITOPWEEK");
                    this.OnTRANGTHAITOPWEEKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NGAYTAOSP in the schema.
        /// </summary>
        [Column(Storage = "_NGAYTAOSP", DbType = "DATE NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<System.DateTime> NGAYTAOSP
        {
            get
            {
                return this._NGAYTAOSP;
            }
            set
            {
                if (this._NGAYTAOSP != value)
                {
                    this.OnNGAYTAOSPChanging(value);
                    this.SendPropertyChanging("NGAYTAOSP");
                    this._NGAYTAOSP = value;
                    this.SendPropertyChanged("NGAYTAOSP");
                    this.OnNGAYTAOSPChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for URL in the schema.
        /// </summary>
        [Column(Storage = "_URL", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string URL
        {
            get
            {
                return this._URL;
            }
            set
            {
                if (this._URL != value)
                {
                    this.OnURLChanging(value);
                    this.SendPropertyChanging("URL");
                    this._URL = value;
                    this.SendPropertyChanged("URL");
                    this.OnURLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIBAN in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAIBAN", DbType = "VARCHAR2(1 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAIBAN
        {
            get
            {
                return this._TRANGTHAIBAN;
            }
            set
            {
                if (this._TRANGTHAIBAN != value)
                {
                    this.OnTRANGTHAIBANChanging(value);
                    this.SendPropertyChanging("TRANGTHAIBAN");
                    this._TRANGTHAIBAN = value;
                    this.SendPropertyChanged("TRANGTHAIBAN");
                    this.OnTRANGTHAIBANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CHITIETDDHs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SANPHAM_CHITIETDDH", Storage="_CHITIETDDHs", ThisKey="MASANPHAM", OtherKey="MASANPHAM", DeleteRule="NO ACTION")]
        public EntitySet<CHITIETDDH> CHITIETDDHs
        {
            get
            {
                return this._CHITIETDDHs;
            }
            set
            {
                this._CHITIETDDHs.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for LOAISP in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="LOAISP_SANPHAM", Storage="_LOAISP", ThisKey="MALOAISP", OtherKey="MALOAISP", IsForeignKey=true)]
        public LOAISP LOAISP
        {
            get
            {
                return this._LOAISP.Entity;
            }
            set
            {
                LOAISP previousValue = this._LOAISP.Entity;
                if ((previousValue != value) || (this._LOAISP.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("LOAISP");
                    if (previousValue != null)
                    {
                        this._LOAISP.Entity = null;
                        previousValue.SANPHAMs.Remove(this);
                    }
                    this._LOAISP.Entity = value;
                    if (value != null)
                    {
                        this._MALOAISP = value.MALOAISP;
                        value.SANPHAMs.Add(this);
                    }
                    else
                    {
                        this._MALOAISP = default(decimal);
                    }
                    this.SendPropertyChanged("LOAISP");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TAGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SANPHAM_TAG", Storage="_TAGs", ThisKey="MASANPHAM", OtherKey="MATAG", LinkTableName=@"ADMIN.CHITIETTAG", LinkThisKey=@"MA_SANPHAM", LinkOtherKey=@"MA_TAG")]
        public EntitySet<TAG> TAGs
        {
            get
            {
                return this._TAGs;
            }
            set
            {
                this._TAGs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_CHITIETDDHs(CHITIETDDH entity)
        {
            this.SendPropertyChanging("CHITIETDDHs");
            entity.SANPHAM = this;
        }
    
        private void detach_CHITIETDDHs(CHITIETDDH entity)
        {
            this.SendPropertyChanging("CHITIETDDHs");
            entity.SANPHAM = null;
        }

        private void attach_TAGs(TAG entity)
        {
            this.SendPropertyChanging("TAGs");
            entity.SANPHAMs.Add(this);
        }
    
        private void detach_TAGs(TAG entity)
        {
            this.SendPropertyChanging("TAGs");
            entity.SANPHAMs.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.TAG in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.TAG")]
    public partial class TAG : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MATAG;

        private string _TENTAG;
        #pragma warning restore 0649

        private EntitySet<SANPHAM> _SANPHAMs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMATAGChanging(decimal value);
        partial void OnMATAGChanged();
        partial void OnTENTAGChanging(string value);
        partial void OnTENTAGChanged();
        #endregion

        public TAG()
        {
            this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MATAG in the schema.
        /// </summary>
        [Column(Name = @"MA_TAG", Storage = "_MATAG", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MATAG
        {
            get
            {
                return this._MATAG;
            }
            set
            {
                if (this._MATAG != value)
                {
                    this.OnMATAGChanging(value);
                    this.SendPropertyChanging("MATAG");
                    this._MATAG = value;
                    this.SendPropertyChanged("MATAG");
                    this.OnMATAGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTAG in the schema.
        /// </summary>
        [Column(Storage = "_TENTAG", DbType = "NVARCHAR2(20) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENTAG
        {
            get
            {
                return this._TENTAG;
            }
            set
            {
                if (this._TENTAG != value)
                {
                    this.OnTENTAGChanging(value);
                    this.SendPropertyChanging("TENTAG");
                    this._TENTAG = value;
                    this.SendPropertyChanged("TENTAG");
                    this.OnTENTAGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SANPHAMs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="SANPHAM_TAG", Storage="_SANPHAMs", ThisKey="MATAG", OtherKey="MASANPHAM", LinkTableName=@"ADMIN.CHITIETTAG", LinkThisKey=@"MA_TAG", LinkOtherKey=@"MA_SANPHAM")]
        public EntitySet<SANPHAM> SANPHAMs
        {
            get
            {
                return this._SANPHAMs;
            }
            set
            {
                this._SANPHAMs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_SANPHAMs(SANPHAM entity)
        {
            this.SendPropertyChanging("SANPHAMs");
            entity.TAGs.Add(this);
        }
    
        private void detach_SANPHAMs(SANPHAM entity)
        {
            this.SendPropertyChanging("SANPHAMs");
            entity.TAGs.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.THONGTINWEBSITE in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.THONGTINWEBSITE")]
    public partial class THONGTINWEBSITE : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MATHONGTIN;

        private string _LOGO;

        private string _HOTLINE;

        private string _FACEBOOK;

        private string _LINKFACEBOOK;

        private string _THOIGIANMOCUA;

        private string _DIACHI;

        private string _EMAIL;

        private string _TENWEBSITE;

        private string _MOTATRANGWEB;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMATHONGTINChanging(decimal value);
        partial void OnMATHONGTINChanged();
        partial void OnLOGOChanging(string value);
        partial void OnLOGOChanged();
        partial void OnHOTLINEChanging(string value);
        partial void OnHOTLINEChanged();
        partial void OnFACEBOOKChanging(string value);
        partial void OnFACEBOOKChanged();
        partial void OnLINKFACEBOOKChanging(string value);
        partial void OnLINKFACEBOOKChanged();
        partial void OnTHOIGIANMOCUAChanging(string value);
        partial void OnTHOIGIANMOCUAChanged();
        partial void OnDIACHIChanging(string value);
        partial void OnDIACHIChanged();
        partial void OnEMAILChanging(string value);
        partial void OnEMAILChanged();
        partial void OnTENWEBSITEChanging(string value);
        partial void OnTENWEBSITEChanged();
        partial void OnMOTATRANGWEBChanging(string value);
        partial void OnMOTATRANGWEBChanged();
        #endregion

        public THONGTINWEBSITE()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MATHONGTIN in the schema.
        /// </summary>
        [Column(Name = @"MA_THONGTIN", Storage = "_MATHONGTIN", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MATHONGTIN
        {
            get
            {
                return this._MATHONGTIN;
            }
            set
            {
                if (this._MATHONGTIN != value)
                {
                    this.OnMATHONGTINChanging(value);
                    this.SendPropertyChanging("MATHONGTIN");
                    this._MATHONGTIN = value;
                    this.SendPropertyChanged("MATHONGTIN");
                    this.OnMATHONGTINChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LOGO in the schema.
        /// </summary>
        [Column(Storage = "_LOGO", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LOGO
        {
            get
            {
                return this._LOGO;
            }
            set
            {
                if (this._LOGO != value)
                {
                    this.OnLOGOChanging(value);
                    this.SendPropertyChanging("LOGO");
                    this._LOGO = value;
                    this.SendPropertyChanged("LOGO");
                    this.OnLOGOChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HOTLINE in the schema.
        /// </summary>
        [Column(Storage = "_HOTLINE", DbType = "VARCHAR2(15 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string HOTLINE
        {
            get
            {
                return this._HOTLINE;
            }
            set
            {
                if (this._HOTLINE != value)
                {
                    this.OnHOTLINEChanging(value);
                    this.SendPropertyChanging("HOTLINE");
                    this._HOTLINE = value;
                    this.SendPropertyChanged("HOTLINE");
                    this.OnHOTLINEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for FACEBOOK in the schema.
        /// </summary>
        [Column(Storage = "_FACEBOOK", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string FACEBOOK
        {
            get
            {
                return this._FACEBOOK;
            }
            set
            {
                if (this._FACEBOOK != value)
                {
                    this.OnFACEBOOKChanging(value);
                    this.SendPropertyChanging("FACEBOOK");
                    this._FACEBOOK = value;
                    this.SendPropertyChanged("FACEBOOK");
                    this.OnFACEBOOKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for LINKFACEBOOK in the schema.
        /// </summary>
        [Column(Name = @"LINK_FACEBOOK", Storage = "_LINKFACEBOOK", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string LINKFACEBOOK
        {
            get
            {
                return this._LINKFACEBOOK;
            }
            set
            {
                if (this._LINKFACEBOOK != value)
                {
                    this.OnLINKFACEBOOKChanging(value);
                    this.SendPropertyChanging("LINKFACEBOOK");
                    this._LINKFACEBOOK = value;
                    this.SendPropertyChanged("LINKFACEBOOK");
                    this.OnLINKFACEBOOKChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for THOIGIANMOCUA in the schema.
        /// </summary>
        [Column(Storage = "_THOIGIANMOCUA", DbType = "VARCHAR2(100 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string THOIGIANMOCUA
        {
            get
            {
                return this._THOIGIANMOCUA;
            }
            set
            {
                if (this._THOIGIANMOCUA != value)
                {
                    this.OnTHOIGIANMOCUAChanging(value);
                    this.SendPropertyChanging("THOIGIANMOCUA");
                    this._THOIGIANMOCUA = value;
                    this.SendPropertyChanged("THOIGIANMOCUA");
                    this.OnTHOIGIANMOCUAChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DIACHI in the schema.
        /// </summary>
        [Column(Storage = "_DIACHI", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string DIACHI
        {
            get
            {
                return this._DIACHI;
            }
            set
            {
                if (this._DIACHI != value)
                {
                    this.OnDIACHIChanging(value);
                    this.SendPropertyChanging("DIACHI");
                    this._DIACHI = value;
                    this.SendPropertyChanged("DIACHI");
                    this.OnDIACHIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for EMAIL in the schema.
        /// </summary>
        [Column(Storage = "_EMAIL", DbType = "VARCHAR2(30 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string EMAIL
        {
            get
            {
                return this._EMAIL;
            }
            set
            {
                if (this._EMAIL != value)
                {
                    this.OnEMAILChanging(value);
                    this.SendPropertyChanging("EMAIL");
                    this._EMAIL = value;
                    this.SendPropertyChanged("EMAIL");
                    this.OnEMAILChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENWEBSITE in the schema.
        /// </summary>
        [Column(Storage = "_TENWEBSITE", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENWEBSITE
        {
            get
            {
                return this._TENWEBSITE;
            }
            set
            {
                if (this._TENWEBSITE != value)
                {
                    this.OnTENWEBSITEChanging(value);
                    this.SendPropertyChanging("TENWEBSITE");
                    this._TENWEBSITE = value;
                    this.SendPropertyChanged("TENWEBSITE");
                    this.OnTENWEBSITEChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for MOTATRANGWEB in the schema.
        /// </summary>
        [Column(Storage = "_MOTATRANGWEB", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string MOTATRANGWEB
        {
            get
            {
                return this._MOTATRANGWEB;
            }
            set
            {
                if (this._MOTATRANGWEB != value)
                {
                    this.OnMOTATRANGWEBChanging(value);
                    this.SendPropertyChanging("MOTATRANGWEB");
                    this._MOTATRANGWEB = value;
                    this.SendPropertyChanged("MOTATRANGWEB");
                    this.OnMOTATRANGWEBChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.TRANGTHAIDDH in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.TRANGTHAIDDH")]
    public partial class TRANGTHAIDDH : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MATTDDH;

        private string _TENTRANGTHAI;
        #pragma warning restore 0649

        private EntitySet<DONDATHANG> _DONDATHANGs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMATTDDHChanging(decimal value);
        partial void OnMATTDDHChanged();
        partial void OnTENTRANGTHAIChanging(string value);
        partial void OnTENTRANGTHAIChanged();
        #endregion

        public TRANGTHAIDDH()
        {
            this._DONDATHANGs = new EntitySet<DONDATHANG>(new Action<DONDATHANG>(this.attach_DONDATHANGs), new Action<DONDATHANG>(this.detach_DONDATHANGs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MATTDDH in the schema.
        /// </summary>
        [Column(Name = @"MA_TTDDH", Storage = "_MATTDDH", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MATTDDH
        {
            get
            {
                return this._MATTDDH;
            }
            set
            {
                if (this._MATTDDH != value)
                {
                    this.OnMATTDDHChanging(value);
                    this.SendPropertyChanging("MATTDDH");
                    this._MATTDDH = value;
                    this.SendPropertyChanged("MATTDDH");
                    this.OnMATTDDHChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTRANGTHAI in the schema.
        /// </summary>
        [Column(Storage = "_TENTRANGTHAI", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENTRANGTHAI
        {
            get
            {
                return this._TENTRANGTHAI;
            }
            set
            {
                if (this._TENTRANGTHAI != value)
                {
                    this.OnTENTRANGTHAIChanging(value);
                    this.SendPropertyChanging("TENTRANGTHAI");
                    this._TENTRANGTHAI = value;
                    this.SendPropertyChanged("TENTRANGTHAI");
                    this.OnTENTRANGTHAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DONDATHANGs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="TRANGTHAIDDH_DONDATHANG", Storage="_DONDATHANGs", ThisKey="MATTDDH", OtherKey="MATTDDH", DeleteRule="NO ACTION")]
        public EntitySet<DONDATHANG> DONDATHANGs
        {
            get
            {
                return this._DONDATHANGs;
            }
            set
            {
                this._DONDATHANGs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.TRANGTHAIDDH = this;
        }
    
        private void detach_DONDATHANGs(DONDATHANG entity)
        {
            this.SendPropertyChanging("DONDATHANGs");
            entity.TRANGTHAIDDH = null;
        }
    }

    /// <summary>
    /// There are no comments for ADMINContext.TRANGTHAIHD in the schema.
    /// </summary>
    [Table(Name = @"ADMIN.TRANGTHAIHD")]
    public partial class TRANGTHAIHD : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MATTHD;

        private string _TENTTHD;
        #pragma warning restore 0649

        private EntitySet<HOADON> _HOADONs;
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMATTHDChanging(decimal value);
        partial void OnMATTHDChanged();
        partial void OnTENTTHDChanging(string value);
        partial void OnTENTTHDChanged();
        #endregion

        public TRANGTHAIHD()
        {
            this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MATTHD in the schema.
        /// </summary>
        [Column(Name = @"MA_TTHD", Storage = "_MATTHD", CanBeNull = false, DbType = "NUMBER NOT NULL", IsPrimaryKey = true)]
        public decimal MATTHD
        {
            get
            {
                return this._MATTHD;
            }
            set
            {
                if (this._MATTHD != value)
                {
                    this.OnMATTHDChanging(value);
                    this.SendPropertyChanging("MATTHD");
                    this._MATTHD = value;
                    this.SendPropertyChanged("MATTHD");
                    this.OnMATTHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENTTHD in the schema.
        /// </summary>
        [Column(Storage = "_TENTTHD", DbType = "NVARCHAR2(100) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENTTHD
        {
            get
            {
                return this._TENTTHD;
            }
            set
            {
                if (this._TENTTHD != value)
                {
                    this.OnTENTTHDChanging(value);
                    this.SendPropertyChanging("TENTTHD");
                    this._TENTTHD = value;
                    this.SendPropertyChanged("TENTTHD");
                    this.OnTENTTHDChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for HOADONs in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="TRANGTHAIHD_HOADON", Storage="_HOADONs", ThisKey="MATTHD", OtherKey="MATTHD", DeleteRule="NO ACTION")]
        public EntitySet<HOADON> HOADONs
        {
            get
            {
                return this._HOADONs;
            }
            set
            {
                this._HOADONs.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.TRANGTHAIHD = this;
        }
    
        private void detach_HOADONs(HOADON entity)
        {
            this.SendPropertyChanging("HOADONs");
            entity.TRANGTHAIHD = null;
        }
    }

}

namespace ADMINContext
{

    /// <summary>
    /// There are no comments for PROCLAYSPLOAITRUYENVAOResult in the schema.
    /// </summary>
    public partial class PROCLAYSPLOAITRUYENVAOResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MASANPHAM;

        private string _TENSANPHAM;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASANPHAMChanging(decimal value);
        partial void OnMASANPHAMChanged();
        partial void OnTENSANPHAMChanging(string value);
        partial void OnTENSANPHAMChanged();
        #endregion

        public PROCLAYSPLOAITRUYENVAOResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"MA_SANPHAM", Storage = "_MASANPHAM", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MASANPHAM
        {
            get
            {
                return this._MASANPHAM;
            }
            set
            {
                if (this._MASANPHAM != value)
                {
                    this.OnMASANPHAMChanging(value);
                    this.SendPropertyChanging("MASANPHAM");
                    this._MASANPHAM = value;
                    this.SendPropertyChanged("MASANPHAM");
                    this.OnMASANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_TENSANPHAM", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSANPHAM
        {
            get
            {
                return this._TENSANPHAM;
            }
            set
            {
                if (this._TENSANPHAM != value)
                {
                    this.OnTENSANPHAMChanging(value);
                    this.SendPropertyChanging("TENSANPHAM");
                    this._TENSANPHAM = value;
                    this.SendPropertyChanged("TENSANPHAM");
                    this.OnTENSANPHAMChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PROCDS6SPBANCHAYResult in the schema.
    /// </summary>
    public partial class PROCDS6SPBANCHAYResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MASANPHAM;

        private string _TENSANPHAM;

        private string _TENLOAI;

        private string _ANHSANPHAM;

        private System.Nullable<decimal> _SOLUONG;

        private System.Nullable<decimal> _THANHTIEN;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASANPHAMChanging(decimal value);
        partial void OnMASANPHAMChanged();
        partial void OnTENSANPHAMChanging(string value);
        partial void OnTENSANPHAMChanged();
        partial void OnTENLOAIChanging(string value);
        partial void OnTENLOAIChanged();
        partial void OnANHSANPHAMChanging(string value);
        partial void OnANHSANPHAMChanged();
        partial void OnSOLUONGChanging(System.Nullable<decimal> value);
        partial void OnSOLUONGChanged();
        partial void OnTHANHTIENChanging(System.Nullable<decimal> value);
        partial void OnTHANHTIENChanged();
        #endregion

        public PROCDS6SPBANCHAYResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"MA_SANPHAM", Storage = "_MASANPHAM", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MASANPHAM
        {
            get
            {
                return this._MASANPHAM;
            }
            set
            {
                if (this._MASANPHAM != value)
                {
                    this.OnMASANPHAMChanging(value);
                    this.SendPropertyChanging("MASANPHAM");
                    this._MASANPHAM = value;
                    this.SendPropertyChanged("MASANPHAM");
                    this.OnMASANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_TENSANPHAM", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSANPHAM
        {
            get
            {
                return this._TENSANPHAM;
            }
            set
            {
                if (this._TENSANPHAM != value)
                {
                    this.OnTENSANPHAMChanging(value);
                    this.SendPropertyChanging("TENSANPHAM");
                    this._TENSANPHAM = value;
                    this.SendPropertyChanged("TENSANPHAM");
                    this.OnTENSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENLOAI in the schema.
        /// </summary>
        [Column(Storage = "_TENLOAI", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENLOAI
        {
            get
            {
                return this._TENLOAI;
            }
            set
            {
                if (this._TENLOAI != value)
                {
                    this.OnTENLOAIChanging(value);
                    this.SendPropertyChanging("TENLOAI");
                    this._TENLOAI = value;
                    this.SendPropertyChanged("TENLOAI");
                    this.OnTENLOAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ANHSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_ANHSANPHAM", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ANHSANPHAM
        {
            get
            {
                return this._ANHSANPHAM;
            }
            set
            {
                if (this._ANHSANPHAM != value)
                {
                    this.OnANHSANPHAMChanging(value);
                    this.SendPropertyChanging("ANHSANPHAM");
                    this._ANHSANPHAM = value;
                    this.SendPropertyChanged("ANHSANPHAM");
                    this.OnANHSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for SOLUONG in the schema.
        /// </summary>
        [Column(Storage = "_SOLUONG", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> SOLUONG
        {
            get
            {
                return this._SOLUONG;
            }
            set
            {
                if (this._SOLUONG != value)
                {
                    this.OnSOLUONGChanging(value);
                    this.SendPropertyChanging("SOLUONG");
                    this._SOLUONG = value;
                    this.SendPropertyChanged("SOLUONG");
                    this.OnSOLUONGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for THANHTIEN in the schema.
        /// </summary>
        [Column(Storage = "_THANHTIEN", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> THANHTIEN
        {
            get
            {
                return this._THANHTIEN;
            }
            set
            {
                if (this._THANHTIEN != value)
                {
                    this.OnTHANHTIENChanging(value);
                    this.SendPropertyChanging("THANHTIEN");
                    this._THANHTIEN = value;
                    this.SendPropertyChanged("THANHTIEN");
                    this.OnTHANHTIENChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for ProcLaySPLoaiTruyenVaoResult in the schema.
    /// </summary>
    public partial class ProcLaySPLoaiTruyenVaoResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private decimal _MASANPHAM;

        private string _TENSANPHAM;

        private System.Nullable<decimal> _GIABAN;

        private System.Nullable<decimal> _GIAKM;

        private string _ANHSANPHAM;

        private string _TRANGTHAIKM;

        private string _URL;

        private string _TRANGTHAIBAN;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnMASANPHAMChanging(decimal value);
        partial void OnMASANPHAMChanged();
        partial void OnTENSANPHAMChanging(string value);
        partial void OnTENSANPHAMChanged();
        partial void OnGIABANChanging(System.Nullable<decimal> value);
        partial void OnGIABANChanged();
        partial void OnGIAKMChanging(System.Nullable<decimal> value);
        partial void OnGIAKMChanged();
        partial void OnANHSANPHAMChanging(string value);
        partial void OnANHSANPHAMChanged();
        partial void OnTRANGTHAIKMChanging(string value);
        partial void OnTRANGTHAIKMChanged();
        partial void OnURLChanging(string value);
        partial void OnURLChanged();
        partial void OnTRANGTHAIBANChanging(string value);
        partial void OnTRANGTHAIBANChanged();
        #endregion

        public ProcLaySPLoaiTruyenVaoResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for MASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"MA_SANPHAM", Storage = "_MASANPHAM", CanBeNull = false, DbType = "NUMBER NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public decimal MASANPHAM
        {
            get
            {
                return this._MASANPHAM;
            }
            set
            {
                if (this._MASANPHAM != value)
                {
                    this.OnMASANPHAMChanging(value);
                    this.SendPropertyChanging("MASANPHAM");
                    this._MASANPHAM = value;
                    this.SendPropertyChanged("MASANPHAM");
                    this.OnMASANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_TENSANPHAM", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENSANPHAM
        {
            get
            {
                return this._TENSANPHAM;
            }
            set
            {
                if (this._TENSANPHAM != value)
                {
                    this.OnTENSANPHAMChanging(value);
                    this.SendPropertyChanging("TENSANPHAM");
                    this._TENSANPHAM = value;
                    this.SendPropertyChanged("TENSANPHAM");
                    this.OnTENSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIABAN in the schema.
        /// </summary>
        [Column(Storage = "_GIABAN", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> GIABAN
        {
            get
            {
                return this._GIABAN;
            }
            set
            {
                if (this._GIABAN != value)
                {
                    this.OnGIABANChanging(value);
                    this.SendPropertyChanging("GIABAN");
                    this._GIABAN = value;
                    this.SendPropertyChanged("GIABAN");
                    this.OnGIABANChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for GIAKM in the schema.
        /// </summary>
        [Column(Storage = "_GIAKM", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> GIAKM
        {
            get
            {
                return this._GIAKM;
            }
            set
            {
                if (this._GIAKM != value)
                {
                    this.OnGIAKMChanging(value);
                    this.SendPropertyChanging("GIAKM");
                    this._GIAKM = value;
                    this.SendPropertyChanged("GIAKM");
                    this.OnGIAKMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for ANHSANPHAM in the schema.
        /// </summary>
        [Column(Storage = "_ANHSANPHAM", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string ANHSANPHAM
        {
            get
            {
                return this._ANHSANPHAM;
            }
            set
            {
                if (this._ANHSANPHAM != value)
                {
                    this.OnANHSANPHAMChanging(value);
                    this.SendPropertyChanging("ANHSANPHAM");
                    this._ANHSANPHAM = value;
                    this.SendPropertyChanged("ANHSANPHAM");
                    this.OnANHSANPHAMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIKM in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAIKM", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAIKM
        {
            get
            {
                return this._TRANGTHAIKM;
            }
            set
            {
                if (this._TRANGTHAIKM != value)
                {
                    this.OnTRANGTHAIKMChanging(value);
                    this.SendPropertyChanging("TRANGTHAIKM");
                    this._TRANGTHAIKM = value;
                    this.SendPropertyChanged("TRANGTHAIKM");
                    this.OnTRANGTHAIKMChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for URL in the schema.
        /// </summary>
        [Column(Storage = "_URL", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string URL
        {
            get
            {
                return this._URL;
            }
            set
            {
                if (this._URL != value)
                {
                    this.OnURLChanging(value);
                    this.SendPropertyChanging("URL");
                    this._URL = value;
                    this.SendPropertyChanged("URL");
                    this.OnURLChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TRANGTHAIBAN in the schema.
        /// </summary>
        [Column(Storage = "_TRANGTHAIBAN", DbType = "VARCHAR2(4000 CHAR) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TRANGTHAIBAN
        {
            get
            {
                return this._TRANGTHAIBAN;
            }
            set
            {
                if (this._TRANGTHAIBAN != value)
                {
                    this.OnTRANGTHAIBANChanging(value);
                    this.SendPropertyChanging("TRANGTHAIBAN");
                    this._TRANGTHAIBAN = value;
                    this.SendPropertyChanged("TRANGTHAIBAN");
                    this.OnTRANGTHAIBANChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PROCTHONGKELOAIResult in the schema.
    /// </summary>
    public partial class PROCTHONGKELOAIResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _TENLOAI;

        private System.Nullable<decimal> _COUNTADMINSANPHAMMASANPHAM;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnTENLOAIChanging(string value);
        partial void OnTENLOAIChanged();
        partial void OnCOUNTADMINSANPHAMMASANPHAMChanging(System.Nullable<decimal> value);
        partial void OnCOUNTADMINSANPHAMMASANPHAMChanged();
        #endregion

        public PROCTHONGKELOAIResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for TENLOAI in the schema.
        /// </summary>
        [Column(Storage = "_TENLOAI", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENLOAI
        {
            get
            {
                return this._TENLOAI;
            }
            set
            {
                if (this._TENLOAI != value)
                {
                    this.OnTENLOAIChanging(value);
                    this.SendPropertyChanging("TENLOAI");
                    this._TENLOAI = value;
                    this.SendPropertyChanged("TENLOAI");
                    this.OnTENLOAIChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for COUNTADMINSANPHAMMASANPHAM in the schema.
        /// </summary>
        [Column(Name = @"""COUNT(ADMIN.SANPHAM.MA_SANPHAM)""", Storage = "_COUNTADMINSANPHAMMASANPHAM", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> COUNTADMINSANPHAMMASANPHAM
        {
            get
            {
                return this._COUNTADMINSANPHAMMASANPHAM;
            }
            set
            {
                if (this._COUNTADMINSANPHAMMASANPHAM != value)
                {
                    this.OnCOUNTADMINSANPHAMMASANPHAMChanging(value);
                    this.SendPropertyChanging("COUNTADMINSANPHAMMASANPHAM");
                    this._COUNTADMINSANPHAMMASANPHAM = value;
                    this.SendPropertyChanged("COUNTADMINSANPHAMMASANPHAM");
                    this.OnCOUNTADMINSANPHAMMASANPHAMChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for PROCTKHDNVResult in the schema.
    /// </summary>
    public partial class PROCTKHDNVResult: INotifyPropertyChanging, INotifyPropertyChanged    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private System.Nullable<decimal> _COUNTADMINDONDATHANGMADONDATHANG;

        private string _TENNHANVIEN;
        #pragma warning restore 0649
    
        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCOUNTADMINDONDATHANGMADONDATHANGChanging(System.Nullable<decimal> value);
        partial void OnCOUNTADMINDONDATHANGMADONDATHANGChanged();
        partial void OnTENNHANVIENChanging(string value);
        partial void OnTENNHANVIENChanged();
        #endregion

        public PROCTKHDNVResult()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for COUNTADMINDONDATHANGMADONDATHANG in the schema.
        /// </summary>
        [Column(Name = @"""COUNT(ADMIN.DONDATHANG.MA_DONDATHANG)""", Storage = "_COUNTADMINDONDATHANGMADONDATHANG", DbType = "NUMBER NULL", UpdateCheck = UpdateCheck.Never)]
        public System.Nullable<decimal> COUNTADMINDONDATHANGMADONDATHANG
        {
            get
            {
                return this._COUNTADMINDONDATHANGMADONDATHANG;
            }
            set
            {
                if (this._COUNTADMINDONDATHANGMADONDATHANG != value)
                {
                    this.OnCOUNTADMINDONDATHANGMADONDATHANGChanging(value);
                    this.SendPropertyChanging("COUNTADMINDONDATHANGMADONDATHANG");
                    this._COUNTADMINDONDATHANGMADONDATHANG = value;
                    this.SendPropertyChanged("COUNTADMINDONDATHANGMADONDATHANG");
                    this.OnCOUNTADMINDONDATHANGMADONDATHANGChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TENNHANVIEN in the schema.
        /// </summary>
        [Column(Storage = "_TENNHANVIEN", DbType = "NVARCHAR2(2000) NULL", UpdateCheck = UpdateCheck.Never)]
        public string TENNHANVIEN
        {
            get
            {
                return this._TENNHANVIEN;
            }
            set
            {
                if (this._TENNHANVIEN != value)
                {
                    this.OnTENNHANVIENChanging(value);
                    this.SendPropertyChanging("TENNHANVIEN");
                    this._TENNHANVIEN = value;
                    this.SendPropertyChanged("TENNHANVIEN");
                    this.OnTENNHANVIENChanged();
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
